{
	"id": 0,
	"name": "@dsnp/sdk",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 466,
			"name": "core",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 467,
					"name": "activityPub",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 177,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 468,
					"name": "batch",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 216,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 469,
					"name": "contracts",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 408,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 470,
					"name": "messages",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 474,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 471,
					"name": "queue",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 554,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 472,
					"name": "store",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 590,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 473,
					"name": "utilities",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 675,
						"name": "__module"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						467,
						468,
						469,
						470,
						471,
						472,
						473
					]
				}
			]
		},
		{
			"id": 177,
			"name": "core/activityPub",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 887,
					"name": "ActivityPub",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 149
				},
				{
					"id": 886,
					"name": "ActivityPubAttachment",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 145
				},
				{
					"id": 888,
					"name": "ActivityPubOpts",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 161
				},
				{
					"id": 889,
					"name": "create",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 162
				},
				{
					"id": 890,
					"name": "isValid",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 165
				},
				{
					"id": 892,
					"name": "isValidProfile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 171
				},
				{
					"id": 891,
					"name": "isValidReply",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 168
				},
				{
					"id": 893,
					"name": "serialize",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 174
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						887,
						886,
						888,
						889,
						890,
						892,
						891,
						893
					]
				}
			]
		},
		{
			"id": 144,
			"name": "core/activityPub/activityPub",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 149,
					"name": "ActivityPub",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ActivityPub represents an activity pub object"
					},
					"children": [
						{
							"id": 150,
							"name": "@context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 160,
							"name": "attachments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 145,
									"name": "ActivityPubAttachment"
								}
							}
						},
						{
							"id": 158,
							"name": "attributedTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 154,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 151,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 157,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 153,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 159,
							"name": "preferredUsername",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 156,
							"name": "published",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 152,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 155,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								150,
								160,
								158,
								154,
								151,
								157,
								153,
								159,
								156,
								152,
								155
							]
						}
					]
				},
				{
					"id": 145,
					"name": "ActivityPubAttachment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ActivityPubAttachment represents an attachment to an activity pub object"
					},
					"children": [
						{
							"id": 147,
							"name": "mediaType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 146,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "PubType"
							}
						},
						{
							"id": 148,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								147,
								146,
								148
							]
						}
					]
				},
				{
					"id": 161,
					"name": "ActivityPubOpts",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "ActivityPubOpts represents options to be passed to the create method."
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 149,
								"name": "ActivityPub"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 162,
					"name": "create",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 163,
							"name": "create",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "create() provides a simple factory for generating activityPub notes.",
								"returns": "An activity pub object\n"
							},
							"parameters": [
								{
									"id": 164,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for the activity pub object to create"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 149,
												"name": "ActivityPub"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 149,
								"name": "ActivityPub"
							}
						}
					]
				},
				{
					"id": 165,
					"name": "isValid",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 166,
							"name": "isValid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "isValid() returns true if the object provided is a valid activityPub.\nOtherwise, it returns false.",
								"returns": "True or false depending on whether the given object is a valid\n"
							},
							"parameters": [
								{
									"id": 167,
									"name": "activityPub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An object to be validated against the activity pub standard"
									},
									"type": {
										"type": "reference",
										"id": 149,
										"name": "ActivityPub"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 171,
					"name": "isValidProfile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 172,
							"name": "isValidProfile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "isValidProfile() returns true if the object provided is a valid activityPub\nprofile. Otherwise, it returns false.",
								"returns": "True or false depending on whether the given object is a valid\n"
							},
							"parameters": [
								{
									"id": 173,
									"name": "activityPub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An object to be validated against the activity pub standard"
									},
									"type": {
										"type": "reference",
										"id": 149,
										"name": "ActivityPub"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 168,
					"name": "isValidReply",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 169,
							"name": "isValidReply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "isValidReply() returns true if the object provided is a valid activityPub\nreply. Otherwise, it returns false.",
								"returns": "True or false depending on whether the given object is a valid\n"
							},
							"parameters": [
								{
									"id": 170,
									"name": "activityPub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An object to be validated against the activity pub standard"
									},
									"type": {
										"type": "reference",
										"id": 149,
										"name": "ActivityPub"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 174,
					"name": "serialize",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 175,
							"name": "serialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "serialize() converts an activityPub object to string for upload via the\nstorage adapter.",
								"returns": "A string representation of the activity pub object\n"
							},
							"parameters": [
								{
									"id": 176,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The activity pub object to hash"
									},
									"type": {
										"type": "reference",
										"id": 149,
										"name": "ActivityPub"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						149,
						145
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						161
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						162,
						165,
						171,
						168,
						174
					]
				}
			]
		},
		{
			"id": 216,
			"name": "core/batch",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 894,
					"name": "createFile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 179
				},
				{
					"id": 899,
					"name": "includes",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 200
				},
				{
					"id": 897,
					"name": "openFile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 193
				},
				{
					"id": 896,
					"name": "openURL",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 190
				},
				{
					"id": 898,
					"name": "readFile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 196
				},
				{
					"id": 895,
					"name": "writeBatch",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 184
				},
				{
					"id": 217,
					"name": "batchMessages",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 205,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 218,
					"name": "parquetSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 219,
						"name": "__module"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						894,
						899,
						897,
						896,
						898,
						895
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						217,
						218
					]
				}
			]
		},
		{
			"id": 178,
			"name": "core/batch/batch",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 179,
					"name": "createFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 180,
							"name": "createFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createFile() takes a series of DSNP messages and returns a URL\nfor storage location.",
								"returns": "A URL of the storage location",
								"tags": [
									{
										"tag": "throws",
										"text": "error if messages argument is empty.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 181,
									"name": "targetPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The path to and name of file"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 182,
									"name": "messages",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An array of DSNPMessage to include in the batch file"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 482,
											"name": "DSNPMessage"
										}
									}
								},
								{
									"id": 183,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as store, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "URL"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 200,
					"name": "includes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 201,
							"name": "includes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "includes() checks if a column/field in a Parquet batch file contains an item.",
								"returns": "void.\n"
							},
							"parameters": [
								{
									"id": 202,
									"name": "reader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a ParquetReader object."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 203,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the column name to check if a value is included."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 204,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a value."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 193,
					"name": "openFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 194,
							"name": "openFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "openFile() allows users to open a parquet file with a path.",
								"returns": "a ParquetReader object.\n"
							},
							"parameters": [
								{
									"id": 195,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "to parquet file."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 190,
					"name": "openURL",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 191,
							"name": "openURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "openURL() allows users to open a parquet file with a URL.",
								"returns": "a ParquetReader object.\n"
							},
							"parameters": [
								{
									"id": 192,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a URL to fetch parquet file from."
									},
									"type": {
										"type": "reference",
										"name": "URL"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "readFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 197,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "readFile() reads a Parquet file by row.",
								"returns": "void.\n"
							},
							"parameters": [
								{
									"id": 198,
									"name": "reader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a ParquetReader object."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 199,
									"name": "doReadRow",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The callback for each row"
									},
									"type": {
										"type": "reference",
										"name": "ReadRowFunction"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 184,
					"name": "writeBatch",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 185,
							"name": "writeBatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "writeBatch() takes a series of DSNP messages and returns a Batch file\nobject for publishing.",
								"returns": "A void promise which will either resolve or reject\n"
							},
							"parameters": [
								{
									"id": 186,
									"name": "writeStream",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A writable stream"
									},
									"type": {
										"type": "reference",
										"id": 593,
										"name": "WriteStream"
									}
								},
								{
									"id": 187,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ParquetJS schema for the messages DSNP type"
									},
									"type": {
										"type": "reference",
										"id": 227,
										"name": "Schema"
									}
								},
								{
									"id": 188,
									"name": "messages",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An array of DSNPMessage to include in the batch file"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 482,
											"name": "DSNPMessage"
										}
									}
								},
								{
									"id": 189,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Options for creating a Parquet file"
									},
									"type": {
										"type": "reference",
										"id": 225,
										"name": "BloomFilterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						179,
						200,
						193,
						190,
						196,
						184
					]
				}
			]
		},
		{
			"id": 205,
			"name": "core/batch/batchMessages",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 211,
					"name": "BatchBroadcastMessage",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 206,
						"typeArguments": [
							{
								"type": "reference",
								"id": 484,
								"name": "BroadcastMessage"
							}
						],
						"name": "DSNPMessageSigned"
					}
				},
				{
					"id": 215,
					"name": "BatchGraphChangeMessage",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 206,
						"typeArguments": [
							{
								"type": "reference",
								"id": 519,
								"name": "GraphChangeMessage"
							}
						],
						"name": "DSNPMessageSigned"
					}
				},
				{
					"id": 214,
					"name": "BatchProfileMessage",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 206,
						"typeArguments": [
							{
								"type": "reference",
								"id": 535,
								"name": "ProfileMessage"
							}
						],
						"name": "DSNPMessageSigned"
					}
				},
				{
					"id": 213,
					"name": "BatchReactionMessage",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 206,
						"typeArguments": [
							{
								"type": "reference",
								"id": 506,
								"name": "ReactionMessage"
							}
						],
						"name": "DSNPMessageSigned"
					}
				},
				{
					"id": 212,
					"name": "BatchReplyMessage",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 206,
						"typeArguments": [
							{
								"type": "reference",
								"id": 494,
								"name": "ReplyMessage"
							}
						],
						"name": "DSNPMessageSigned"
					}
				},
				{
					"id": 210,
					"name": "DSNPBatchMessage",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 206,
						"typeArguments": [
							{
								"type": "reference",
								"id": 482,
								"name": "DSNPMessage"
							}
						],
						"name": "DSNPMessageSigned"
					}
				},
				{
					"id": 206,
					"name": "DSNPMessageSigned",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"typeParameter": [
						{
							"id": 209,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 482,
								"name": "DSNPMessage"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "T"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 207,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 208,
											"name": "signature",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												208
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						211,
						215,
						214,
						213,
						212,
						210,
						206
					]
				}
			]
		},
		{
			"id": 219,
			"name": "core/batch/parquetSchema",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 220,
					"name": "BloomFilterColumnOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "BloomFilterColumnOptions: bloom filter options for a column intended to be used with when writing a batch file"
					},
					"children": [
						{
							"id": 221,
							"name": "column",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 223,
							"name": "falsePositiveRate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 224,
							"name": "numDistinct",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 222,
							"name": "numFilterBytes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								221,
								223,
								224,
								222
							]
						}
					]
				},
				{
					"id": 225,
					"name": "BloomFilterOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "BloomFilterOptions: bloom filter options intended to be used with when writing a batch file"
					},
					"children": [
						{
							"id": 226,
							"name": "bloomFilters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 220,
									"name": "BloomFilterColumnOptions"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								226
							]
						}
					]
				},
				{
					"id": 227,
					"name": "Schema",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "columnName"
							},
							{
								"type": "reference",
								"name": "typing"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 245,
					"name": "BroadcastBloomFilterOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "BroadcastBloomFilter: bloom filter options for batching broadcast messages"
					},
					"type": {
						"type": "reference",
						"id": 225,
						"name": "BloomFilterOptions"
					},
					"defaultValue": "..."
				},
				{
					"id": 228,
					"name": "BroadcastSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Broadcast: a public post"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 229,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 233,
									"name": "contentHash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 234,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 235,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														235
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 230,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 231,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 232,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														232
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 236,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 237,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 238,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														238
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 242,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 243,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 244,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														244
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 239,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 240,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 241,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														241
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										233,
										230,
										236,
										242,
										239
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 285,
					"name": "GraphChangeBloomFilterOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "GraphChangeBloomFilter: bloom filter options for batching graph changes messages"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 286,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 287,
									"name": "bloomFilters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 288,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 289,
														"name": "column",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"fromId\""
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															289
														]
													}
												]
											}
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										287
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 271,
					"name": "GraphChangeSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "GraphChange: a public follow/unfollow\nNote followType will be only 0 or 1; other values are invalid"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 272,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 279,
									"name": "changeType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 280,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 281,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														281
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 273,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 274,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 275,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														275
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 276,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 277,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 278,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														278
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 282,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 283,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 284,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														284
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										279,
										273,
										276,
										282
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 304,
					"name": "ProfileBloomFilterOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "ProfileBloomFilter: bloom filter options for batching profile messages"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 305,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 306,
									"name": "bloomFilters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 307,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 308,
														"name": "column",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"fromId\""
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															308
														]
													}
												]
											}
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										306
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 290,
					"name": "ProfileSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Profile - a profile change message"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 291,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 292,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 293,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 294,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														294
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 295,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 296,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 297,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														297
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 301,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 302,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 303,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														303
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 298,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 299,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 300,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														300
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										292,
										295,
										301,
										298
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 326,
					"name": "ReactionBloomFilterOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "ReactionBloomFilter: bloom filter options for batching reaction messages"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 327,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 328,
									"name": "bloomFilters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 329,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 330,
														"name": "column",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"emoji\""
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															330
														]
													}
												]
											}
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										328
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 309,
					"name": "ReactionSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Reaction: a visual reply to a Broadcast message (aka post)"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 310,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 311,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 312,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 313,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														313
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 314,
									"name": "emoji",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 315,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 316,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														316
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 317,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 318,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 319,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														319
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 320,
									"name": "inReplyTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 321,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 322,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														322
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 323,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 324,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 325,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														325
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										311,
										314,
										317,
										320,
										323
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 266,
					"name": "ReplyBloomFilterOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "ReplyBloomBloomFilter: bloom filter options for batching reply messages"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 267,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 268,
									"name": "bloomFilters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 269,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 270,
														"name": "column",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"fromId\""
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															270
														]
													}
												]
											}
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										268
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 246,
					"name": "ReplySchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Reply: A public reply post"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 247,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 251,
									"name": "contentHash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 252,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 253,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														253
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 248,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 249,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 250,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														250
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 254,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 255,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 256,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														256
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 257,
									"name": "inReplyTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 259,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														259
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 263,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 264,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 265,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														265
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 260,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 261,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 262,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														262
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										251,
										248,
										254,
										257,
										263,
										260
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 334,
					"name": "getBloomFilterOptionsFor",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 335,
							"name": "getBloomFilterOptionsFor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getBloomFilterOptionsFor() takes DSNPType and returns its bloom filter options",
								"returns": "The corresponding parquet bloom filter options\n"
							},
							"parameters": [
								{
									"id": 336,
									"name": "dsnpType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a dsnpType"
									},
									"type": {
										"type": "reference",
										"id": 476,
										"name": "DSNPType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 225,
								"name": "BloomFilterOptions"
							}
						}
					]
				},
				{
					"id": 331,
					"name": "getSchemaFor",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 332,
							"name": "getSchemaFor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getSchemaFor() takes DSNPType and returns its corresponding parquet schema",
								"returns": "The corresponding parquet schema\n"
							},
							"parameters": [
								{
									"id": 333,
									"name": "dsnpType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a dsnpType"
									},
									"type": {
										"type": "reference",
										"id": 476,
										"name": "DSNPType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 227,
								"name": "Schema"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						220,
						225
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						227
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						245,
						228,
						285,
						271,
						304,
						290,
						326,
						309,
						266,
						246
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						334,
						331
					]
				}
			]
		},
		{
			"id": 408,
			"name": "core/contracts",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 409,
					"name": "announcement",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 337,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 411,
					"name": "identity",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 371,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 410,
					"name": "registry",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 413,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 412,
					"name": "subscription",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 450,
						"name": "__module"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						409,
						411,
						410,
						412
					]
				}
			]
		},
		{
			"id": 337,
			"name": "core/contracts/announcement",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 338,
					"name": "Announcement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 339,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 341,
							"name": "hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 340,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								339,
								341,
								340
							]
						}
					]
				},
				{
					"id": 342,
					"name": "batch",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 343,
							"name": "batch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "batch() allows users call the batch smart contract and post the URI and hash\nof a generated batch to the blockchain.",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 344,
									"name": "announcements",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "array of announcements to batch."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 338,
											"name": "Announcement"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 345,
					"name": "dsnpBatchFilter",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 346,
							"name": "dsnpBatchFilter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves event filter for DSNPBatch event",
								"returns": "DSNPBatch event filter\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "EventFilter"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						338
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						342,
						345
					]
				}
			]
		},
		{
			"id": 347,
			"name": "core/contracts/contract",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 351,
					"name": "VmError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 352,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 353,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 354,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 355,
											"name": "body",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												355
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								352,
								353
							]
						}
					]
				},
				{
					"id": 356,
					"name": "DSNP_MIGRATION_ABI",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ethers.utils.ParamType"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 367,
					"name": "findEvent",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 368,
							"name": "findEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find event with given name.",
								"returns": "First event in log that matches name",
								"tags": [
									{
										"tag": "throws",
										"text": "error if no matching events were found"
									},
									{
										"tag": "throws",
										"text": "error if a log is unparsable. This is probably because the event's ABI has not been added to EVENTS_ABI.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 369,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "name of event to find."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 370,
									"name": "logs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "raw logs from a transaction"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "RawLog"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "LogDescription"
							}
						}
					]
				},
				{
					"id": 357,
					"name": "getContractAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 358,
							"name": "getContractAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getContractAddress() allows users call the batch smart contract and post the URI and hash\nof a generated batch to the blockchain.",
								"returns": "HexString A hexidecimal string representing the contract address\n"
							},
							"parameters": [
								{
									"id": 359,
									"name": "provider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "initialized provider"
									},
									"type": {
										"type": "reference",
										"name": "Provider"
									}
								},
								{
									"id": 360,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of contract to find address for"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 348,
					"name": "getKeccakTopic",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 349,
							"name": "getKeccakTopic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 350,
									"name": "topic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 361,
					"name": "getVmError",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 362,
							"name": "getVmError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the JSON RPC error from the body, if one exists",
								"returns": "the error if any\n"
							},
							"parameters": [
								{
									"id": 363,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The error expected to have a vm Error"
									},
									"type": {
										"type": "reference",
										"id": 351,
										"name": "VmError"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 364,
					"name": "parseLogs",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 365,
							"name": "parseLogs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Parse all transaction logs.\nThis requires that all contracts involved in processing the transaction be included in EVENTS_ABI.",
								"returns": "parsed logs excluding any logs that cannot be parsed by the interface.",
								"tags": [
									{
										"tag": "throws",
										"text": "error if a log is unparsable. This is probably because the event's ABI has not been added to EVENTS_ABI.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 366,
									"name": "logs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "raw logs from a transaction"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "RawLog"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "LogDescription"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						351
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						356
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						367,
						357,
						348,
						361,
						364
					]
				}
			]
		},
		{
			"id": 371,
			"name": "core/contracts/identity",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 372,
					"name": "Permission",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 374,
							"name": "ANNOUNCE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "1"
						},
						{
							"id": 376,
							"name": "DELEGATE_ADD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "3"
						},
						{
							"id": 377,
							"name": "DELEGATE_REMOVE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "4"
						},
						{
							"id": 373,
							"name": "NONE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "0"
						},
						{
							"id": 375,
							"name": "OWNERSHIP_TRANSFER",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "2"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								374,
								376,
								377,
								373,
								375
							]
						}
					]
				},
				{
					"id": 396,
					"name": "createAndRegisterBeaconProxy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 397,
							"name": "createAndRegisterBeaconProxy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new identity and register it to a handle to get a new DSNP Id.\nThis will create and register a new beacon proxy identity.",
								"returns": "The contract Transaction\n"
							},
							"parameters": [
								{
									"id": 398,
									"name": "userAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "User's public key address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 399,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The string handle to register"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 400,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 387,
					"name": "createBeaconProxy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 388,
							"name": "createBeaconProxy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createBeaconProxy(beacon: EthereumAddress) Creates a new identity with the message sender as the owner",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 389,
									"name": "beacon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The beacon address to use logic contract resolution"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 390,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 391,
					"name": "createBeaconProxyWithOwner",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 392,
							"name": "createBeaconProxyWithOwner",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createBeaconProxyWithOwner(beacon: EthereumAddress, owner: EthereumAddress) Creates a new identity with the ecrecover address as the owner",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 393,
									"name": "owner",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The initial owner's address of the new contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 394,
									"name": "beacon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The beacon address to use logic contract resolution"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 395,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 378,
					"name": "createCloneProxy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 379,
							"name": "createCloneProxy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createCloneProxy(logic?: Ethereum Address ) Creates a new identity with the message sender as the owner",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 380,
									"name": "logic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The address to use for the logic contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 381,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 382,
					"name": "createCloneProxyWithOwner",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 383,
							"name": "createCloneProxyWithOwner",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createCloneProxyWithOwner() Creates a new identity with the ecrecover address as the owner",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 384,
									"name": "owner",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The initial owner's address of the new contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 385,
									"name": "logic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The address to use for the logic contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 386,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 401,
					"name": "isAuthorizedTo",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 402,
							"name": "isAuthorizedTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks to see if address is authorized with the given permission",
								"returns": "boolean\n"
							},
							"parameters": [
								{
									"id": 403,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Address that is used to test permission"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 404,
									"name": "contractAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Address of contract to check against"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 405,
									"name": "permission",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Level of permission check. See Permission for details"
									},
									"type": {
										"type": "reference",
										"id": 372,
										"name": "Permission"
									}
								},
								{
									"id": 406,
									"name": "blockNumber",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Check for authorization at a particular block number,\n       0x0 reserved for endless permissions"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 407,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						372
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						396,
						387,
						391,
						378,
						382,
						401
					]
				}
			]
		},
		{
			"id": 413,
			"name": "core/contracts/registry",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 414,
					"name": "Registration",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 415,
							"name": "contractAddr",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 416,
							"name": "dsnpUserId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 417,
							"name": "handle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								415,
								416,
								417
							]
						}
					]
				},
				{
					"id": 418,
					"name": "Handle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 428,
					"name": "changeAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 429,
							"name": "changeAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "changeAddress() changes the identity contract address of a DSNP Id",
								"returns": "The contract Transaction\n"
							},
							"parameters": [
								{
									"id": 430,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The string handle to alter"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 431,
									"name": "identityContractAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Address of the new identity contract to use"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 432,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "(optional) any config overrides."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 433,
					"name": "changeHandle",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 434,
							"name": "changeHandle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "changeHandle() changes the handle of a DSNP Id",
								"returns": "The contract Transaction\n"
							},
							"parameters": [
								{
									"id": 435,
									"name": "oldHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The string handle to alter"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 436,
									"name": "newHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The new handle to use instead"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 437,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "(optional) any config overrides."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 438,
					"name": "getDSNPRegistryUpdateEvents",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 439,
							"name": "getDSNPRegistryUpdateEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getDSNPRegistryUpdateEvents() Get all the DSNPRegistryUpdate events",
								"returns": "An array of all the matching events\n"
							},
							"parameters": [
								{
									"id": 440,
									"name": "filter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "By dsnpUserId or Contract Address"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 414,
														"name": "Registration"
													},
													{
														"type": "literal",
														"value": "handle"
													}
												],
												"name": "Omit"
											}
										],
										"name": "Partial"
									}
								},
								{
									"id": 441,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "(optional) any config overrides."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 414,
											"name": "Registration"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 442,
					"name": "isMessageSignatureAuthorizedTo",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 443,
							"name": "isMessageSignatureAuthorizedTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "isMessageSignatureAuthorizedTo() validates a serialized message or DSNPMessage against a signature and then checks that the\nsigner has the permissions specified.  DSNPMessages should be passed as is,\nwithout serializing, to guarantee consistent results."
							},
							"parameters": [
								{
									"id": 444,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the signature for the message"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 445,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the signed message"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 482,
												"name": "DSNPMessage"
											}
										]
									}
								},
								{
									"id": 446,
									"name": "dsnpUserId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the DSNP User Id of the supposed signer"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 447,
									"name": "permission",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the permissions to check for"
									},
									"type": {
										"type": "reference",
										"id": 372,
										"name": "Permission"
									}
								},
								{
									"id": 448,
									"name": "blockTag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "(optional). A block number or string BlockTag\n   (see https://docs.ethers.io/v5/api/providers/types/)\n   Defaults to 0x0, which checks for \"forever\" permissions."
									},
									"type": {
										"type": "reference",
										"name": "BlockTag"
									}
								},
								{
									"id": 449,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "(optional) any config overrides.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 423,
					"name": "register",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 424,
							"name": "register",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "register() registers a handle to get a new DSNP Id",
								"returns": "The contract Transaction\n"
							},
							"parameters": [
								{
									"id": 425,
									"name": "identityContractAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Address of the identity contract to use"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 426,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The string handle to register"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 427,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "(optional) any config overrides."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 419,
					"name": "resolveRegistration",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 420,
							"name": "resolveRegistration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "resolveRegistration() Try to resolve a handle into a DSNP Id",
								"returns": "The Hex for the DSNP Id or null if not found\n"
							},
							"parameters": [
								{
									"id": 421,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String handle to resolve"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 422,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "(optional) any config overrides."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 414,
												"name": "Registration"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						414
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						418
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						428,
						433,
						438,
						442,
						423,
						419
					]
				}
			]
		},
		{
			"id": 450,
			"name": "core/contracts/subscription",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 451,
					"name": "BatchAnnounceCallbackArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "BatchAnnounceCallbackArgs: interface for callback function that is passed to subscribeToBatchAnnounceEvents"
					},
					"children": [
						{
							"id": 452,
							"name": "blockNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 456,
							"name": "dsnpHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 454,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 455,
							"name": "dsnpUri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 453,
							"name": "transactionHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								452,
								456,
								454,
								455,
								453
							]
						}
					]
				},
				{
					"id": 457,
					"name": "BatchFilterOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 458,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 459,
							"name": "fromBlock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								458,
								459
							]
						}
					]
				},
				{
					"id": 460,
					"name": "subscribeToBatchAnnounceEvents",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 461,
							"name": "subscribeToBatchAnnounceEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "subscribeToBatchAnnounceEvents() sets up a listener to listen to retrieve Batch Announce events from the chain.\nIt takes a callback and a filter. The filter is used to filter events that come through.\nThe callback is invoked for each correctly filtered event.",
								"returns": "A function that can be called to remove listener for this type of event\n"
							},
							"parameters": [
								{
									"id": 462,
									"name": "doReceiveAnnouncement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The callback function to be called when an event is received"
									},
									"type": {
										"type": "reference",
										"name": "BatchAnnounceCallback"
									}
								},
								{
									"id": 463,
									"name": "filter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Any filter options for including or excluding certain events"
									},
									"type": {
										"type": "reference",
										"id": 457,
										"name": "BatchFilterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 464,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 465,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						451,
						457
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						460
					]
				}
			]
		},
		{
			"id": 474,
			"name": "core/messages",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 902,
					"name": "BroadcastMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 484
				},
				{
					"id": 908,
					"name": "DSNPGraphChangeType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 516
				},
				{
					"id": 901,
					"name": "DSNPMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 482
				},
				{
					"id": 900,
					"name": "DSNPType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 476
				},
				{
					"id": 909,
					"name": "GraphChangeMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 519
				},
				{
					"id": 913,
					"name": "ProfileMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 535
				},
				{
					"id": 906,
					"name": "ReactionMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 506
				},
				{
					"id": 904,
					"name": "ReplyMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 494
				},
				{
					"id": 903,
					"name": "createBroadcastMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 489
				},
				{
					"id": 910,
					"name": "createFollowGraphChangeMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 524
				},
				{
					"id": 914,
					"name": "createProfileMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 540
				},
				{
					"id": 907,
					"name": "createReactionMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 511
				},
				{
					"id": 905,
					"name": "createReplyMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 500
				},
				{
					"id": 911,
					"name": "createUnfollowGraphChangeMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 528
				},
				{
					"id": 916,
					"name": "recoverPublicKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 550
				},
				{
					"id": 912,
					"name": "serialize",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 532
				},
				{
					"id": 915,
					"name": "sign",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 545
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						902,
						908,
						901,
						900,
						909,
						913,
						906,
						904,
						903,
						910,
						914,
						907,
						905,
						911,
						916,
						912,
						915
					]
				}
			]
		},
		{
			"id": 475,
			"name": "core/messages/messages",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 516,
					"name": "DSNPGraphChangeType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "DSNPGraphChangeType: an enum representing different types of graph changes"
					},
					"children": [
						{
							"id": 517,
							"name": "Follow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "1"
						},
						{
							"id": 518,
							"name": "Unfollow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "2"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								517,
								518
							]
						}
					]
				},
				{
					"id": 476,
					"name": "DSNPType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "DSNPType: an enum representing different types of DSNP messages"
					},
					"children": [
						{
							"id": 478,
							"name": "Broadcast",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "2"
						},
						{
							"id": 477,
							"name": "GraphChange",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "1"
						},
						{
							"id": 481,
							"name": "Profile",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "5"
						},
						{
							"id": 480,
							"name": "Reaction",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "4"
						},
						{
							"id": 479,
							"name": "Reply",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "3"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								478,
								477,
								481,
								480,
								479
							]
						}
					]
				},
				{
					"id": 484,
					"name": "BroadcastMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "BroadcastMessage: a DSNP message of type Broadcast"
					},
					"children": [
						{
							"id": 486,
							"name": "contentHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 485,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 478,
								"name": "Broadcast"
							},
							"overwrites": {
								"type": "reference",
								"id": 483,
								"name": "DSNPMessage.dsnpType"
							}
						},
						{
							"id": 487,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 488,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								486,
								485,
								487,
								488
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 482,
							"name": "DSNPMessage"
						}
					]
				},
				{
					"id": 482,
					"name": "DSNPMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "DSNPMessage: a message intended for inclusion in a batch file"
					},
					"children": [
						{
							"id": 483,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 476,
								"name": "DSNPType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								483
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 484,
							"name": "BroadcastMessage"
						},
						{
							"type": "reference",
							"id": 494,
							"name": "ReplyMessage"
						},
						{
							"type": "reference",
							"id": 506,
							"name": "ReactionMessage"
						},
						{
							"type": "reference",
							"id": 519,
							"name": "GraphChangeMessage"
						},
						{
							"type": "reference",
							"id": 535,
							"name": "ProfileMessage"
						}
					]
				},
				{
					"id": 519,
					"name": "GraphChangeMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "GraphChangeMessage: a DSNP message of type GraphChange"
					},
					"children": [
						{
							"id": 522,
							"name": "changeType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 516,
								"name": "DSNPGraphChangeType"
							}
						},
						{
							"id": 521,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 477,
								"name": "GraphChange"
							},
							"overwrites": {
								"type": "reference",
								"id": 483,
								"name": "DSNPMessage.dsnpType"
							}
						},
						{
							"id": 520,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 523,
							"name": "objectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								522,
								521,
								520,
								523
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 482,
							"name": "DSNPMessage"
						}
					]
				},
				{
					"id": 535,
					"name": "ProfileMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ProfileMessage: a DSNP message of type Profile"
					},
					"children": [
						{
							"id": 537,
							"name": "contentHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 536,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 481,
								"name": "Profile"
							},
							"overwrites": {
								"type": "reference",
								"id": 483,
								"name": "DSNPMessage.dsnpType"
							}
						},
						{
							"id": 538,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 539,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								537,
								536,
								538,
								539
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 482,
							"name": "DSNPMessage"
						}
					]
				},
				{
					"id": 506,
					"name": "ReactionMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ReactionMessage: a DSNP message of type Reaction"
					},
					"children": [
						{
							"id": 507,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 480,
								"name": "Reaction"
							},
							"overwrites": {
								"type": "reference",
								"id": 483,
								"name": "DSNPMessage.dsnpType"
							}
						},
						{
							"id": 508,
							"name": "emoji",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 509,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 510,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								507,
								508,
								509,
								510
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 482,
							"name": "DSNPMessage"
						}
					]
				},
				{
					"id": 494,
					"name": "ReplyMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ReplyMessage: a DSNP message of type Reply"
					},
					"children": [
						{
							"id": 496,
							"name": "contentHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 495,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 479,
								"name": "Reply"
							},
							"overwrites": {
								"type": "reference",
								"id": 483,
								"name": "DSNPMessage.dsnpType"
							}
						},
						{
							"id": 497,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 498,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 499,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								496,
								495,
								497,
								498,
								499
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 482,
							"name": "DSNPMessage"
						}
					]
				},
				{
					"id": 489,
					"name": "createBroadcastMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 490,
							"name": "createBroadcastMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createBroadcastMessage() generates a broadcast message from a given URI and\nhash.",
								"returns": "A BroadcastMessage\n"
							},
							"parameters": [
								{
									"id": 491,
									"name": "fromId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user from whom the message is posted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 492,
									"name": "uri",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The URI of the activity pub content to reference"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 493,
									"name": "hash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The hash of the content at the URI"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 484,
								"name": "BroadcastMessage"
							}
						}
					]
				},
				{
					"id": 524,
					"name": "createFollowGraphChangeMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 525,
							"name": "createFollowGraphChangeMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createFollowGraphChangeMessage() generates a follow graph change message from\na given DSNP user id.",
								"returns": "A GraphChangeMessage\n"
							},
							"parameters": [
								{
									"id": 526,
									"name": "fromId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user from whom the message is posted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 527,
									"name": "followeeId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user to follow"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 519,
								"name": "GraphChangeMessage"
							}
						}
					]
				},
				{
					"id": 540,
					"name": "createProfileMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 541,
							"name": "createProfileMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createProfileMessage() generates a profile message from a given URI and hash.",
								"returns": "A ProfileMessage\n"
							},
							"parameters": [
								{
									"id": 542,
									"name": "fromId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user from whom the message is posted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 543,
									"name": "uri",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The URI of the activity pub content to reference"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 544,
									"name": "hash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The hash of the content at the URI"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 535,
								"name": "ProfileMessage"
							}
						}
					]
				},
				{
					"id": 511,
					"name": "createReactionMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 512,
							"name": "createReactionMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createReactionMessage() generates a reply message from a given URI, hash and\nmessage identifier.",
								"returns": "A ReactionMessage\n"
							},
							"parameters": [
								{
									"id": 513,
									"name": "fromId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user from whom the message is posted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 514,
									"name": "emoji",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The emoji to respond with"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 515,
									"name": "inReplyTo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The message id of the parent message"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 506,
								"name": "ReactionMessage"
							}
						}
					]
				},
				{
					"id": 500,
					"name": "createReplyMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 501,
							"name": "createReplyMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createReplyMessage() generates a reply message from a given URI, hash and\nmessage identifier.",
								"returns": "A ReplyMessage\n"
							},
							"parameters": [
								{
									"id": 502,
									"name": "fromId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user from whom the message is posted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 503,
									"name": "uri",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The URI of the activity pub content to reference"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 504,
									"name": "hash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The hash of the content at the URI"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 505,
									"name": "inReplyTo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The message id of the parent message"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 494,
								"name": "ReplyMessage"
							}
						}
					]
				},
				{
					"id": 528,
					"name": "createUnfollowGraphChangeMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 529,
							"name": "createUnfollowGraphChangeMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createUnfollowGraphChangeMessage() generates an unfollow graph change message\nfrom a given DSNP user id.",
								"returns": "A GraphChangeMessage\n"
							},
							"parameters": [
								{
									"id": 530,
									"name": "fromId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user from whom the message is posted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 531,
									"name": "followeeId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user to unfollow"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 519,
								"name": "GraphChangeMessage"
							}
						}
					]
				},
				{
					"id": 550,
					"name": "recoverPublicKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 551,
							"name": "recoverPublicKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "recoverPublicKey() takes a DSNP message and a message signature and returns\nthe corresponding public key for validation.",
								"returns": "The address of the signer in hex\n"
							},
							"parameters": [
								{
									"id": 552,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP message to sign"
									},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "DSNPMessage"
									}
								},
								{
									"id": 553,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The message signature to validate"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 532,
					"name": "serialize",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 533,
							"name": "serialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "serialize() takes a DSNP message and returns a serialized string.",
								"returns": "A string serialization of the message\n"
							},
							"parameters": [
								{
									"id": 534,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP message to serialized"
									},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "DSNPMessage"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 545,
					"name": "sign",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 546,
							"name": "sign",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "sign() takes a DSNP message and returns a signed DSNP message ready for\ninclusion in a batch.",
								"returns": "The signed DSNP message\n",
								"tags": [
									{
										"tag": "throws",
										"text": "{@link MissingSigner}\nThis error is thrown if no Signer is defined in the configuration options."
									}
								]
							},
							"typeParameter": [
								{
									"id": 547,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "DSNPMessage"
									}
								}
							],
							"parameters": [
								{
									"id": 548,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP message to sign"
									},
									"type": {
										"type": "reference",
										"name": "T"
									}
								},
								{
									"id": 549,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 206,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "DSNPMessageSigned"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						516,
						476
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						484,
						482,
						519,
						535,
						506,
						494
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						489,
						524,
						540,
						511,
						500,
						528,
						550,
						532,
						545
					]
				}
			]
		},
		{
			"id": 554,
			"name": "core/queue",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 917,
					"name": "QueueId",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 574
				},
				{
					"id": 918,
					"name": "QueueInterface",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 575
				},
				{
					"id": 919,
					"name": "dequeueBatch",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 585
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						917,
						918,
						919
					]
				}
			]
		},
		{
			"id": 555,
			"name": "core/queue/memoryQueue",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 556,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "MemoryQueue provides a simple, in-memory store for DSNP messages to be\nannounced. This adapter is the default if no other is provided in\nconfiguration."
					},
					"children": [
						{
							"id": 557,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 558,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 556,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 560,
							"name": "nextId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 559,
							"name": "queues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "QueueItem"
										}
									}
								],
								"name": "Record"
							}
						},
						{
							"id": 564,
							"name": "dequeue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 565,
									"name": "dequeue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "dequeue() implements the dequeue function of the QueueInterface. It takes a\nDSNP type, then removes and returns the first DSNP message of the matching\ntype added to the queue. If no messages of the type exist, null will be\nreturned to indicate the end of the queue.",
										"returns": "The dequeued DSNP message or null to indicate end of queue\n"
									},
									"parameters": [
										{
											"id": 566,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The DSNP message type to dequeue"
											},
											"type": {
												"type": "reference",
												"id": 476,
												"name": "DSNPType"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 210,
														"name": "DSNPBatchMessage"
													}
												]
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 580,
										"name": "QueueInterface.dequeue"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 579,
								"name": "QueueInterface.dequeue"
							}
						},
						{
							"id": 561,
							"name": "enqueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 562,
									"name": "enqueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "enqueue() implements the enqueue function of the QueueInterface. It takes a\nDSNP message, adds it to an in-memory store and returns an id which can be\nused to reverse this action, if needed.",
										"returns": "A queue id to be used to remove the message if needed\n"
									},
									"parameters": [
										{
											"id": 563,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The DSNP message to queue up for the next batch"
											},
											"type": {
												"type": "reference",
												"id": 210,
												"name": "DSNPBatchMessage"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 577,
										"name": "QueueInterface.enqueue"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 576,
								"name": "QueueInterface.enqueue"
							}
						},
						{
							"id": 567,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 568,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "remove() implements the remove function of the QueueInterface. It takes an\nid, removes any message in the queue with matching ids and returns the\nremoved message.",
										"returns": "The removed message\n",
										"tags": [
											{
												"tag": "throws",
												"text": "{@link InvalidId}\nThrown if called with an invalid Queue Id."
											},
											{
												"tag": "throws",
												"text": "{@link IdDoesNotExist}\nThrown if called with a Queue Id that does not match any existing message."
											}
										]
									},
									"parameters": [
										{
											"id": 569,
											"name": "queueId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The id of the DSNP message to remove from the queue"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 210,
												"name": "DSNPBatchMessage"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 583,
										"name": "QueueInterface.remove"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 582,
								"name": "QueueInterface.remove"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								557
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								560,
								559
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								564,
								561,
								567
							]
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 575,
							"name": "QueueInterface"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						556
					]
				}
			]
		},
		{
			"id": 573,
			"name": "core/queue/queue",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 575,
					"name": "QueueInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "QueueInterface is the interface a queue adapter is expected to implement to\nbe used with high-level methods in this SDK. The require methods consist of\nan enqueue function, a dequeue function and a remove function."
					},
					"children": [
						{
							"id": 579,
							"name": "dequeue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 580,
									"name": "dequeue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 581,
											"name": "dsnpType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 476,
												"name": "DSNPType"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 210,
														"name": "DSNPBatchMessage"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 576,
							"name": "enqueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 577,
									"name": "enqueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 578,
											"name": "dsnpMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 210,
												"name": "DSNPBatchMessage"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 582,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 583,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 584,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 210,
												"name": "DSNPBatchMessage"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								579,
								576,
								582
							]
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 556,
							"name": "default"
						}
					]
				},
				{
					"id": 574,
					"name": "QueueId",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "QueueId is an representation of an identifier used by a queuing adapter for\nreferencing specific items in the queue which may need to be removed in the\nfuture."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 585,
					"name": "dequeueBatch",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 586,
							"name": "dequeueBatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "dequeueBatch() takes a DSNP type and number of messages to dequeue and\nreturns an array for inclusion in a batch file. If the number provided is\nzero, all messages in the queue with a matching type will be returned.",
								"returns": "An array of DSNP messages removed from the queue\n"
							},
							"parameters": [
								{
									"id": 587,
									"name": "dsnpType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP type of messages to dequeue"
									},
									"type": {
										"type": "reference",
										"id": 476,
										"name": "DSNPType"
									}
								},
								{
									"id": 588,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The number of messages to dequeue and return"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 589,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 210,
											"name": "DSNPBatchMessage"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						575
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						574
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						585
					]
				}
			]
		},
		{
			"id": 590,
			"name": "core/store",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 920,
					"name": "Content",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 592
				},
				{
					"id": 922,
					"name": "ReadStream",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 620
				},
				{
					"id": 924,
					"name": "StoreInterface",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 640
				},
				{
					"id": 921,
					"name": "WriteStream",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 593
				},
				{
					"id": 923,
					"name": "WriteStreamCallback",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 637
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						920,
						922,
						924,
						921,
						923
					]
				}
			]
		},
		{
			"id": 591,
			"name": "core/store/interface",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 620,
					"name": "ReadStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ReadStream: a read stream intended reading a batch file"
					},
					"children": [
						{
							"id": 625,
							"name": "end",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 626,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 627,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 628,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 629,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 630,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 631,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 632,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 633,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 634,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 635,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 636,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 621,
							"name": "read",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 622,
									"name": "read",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 623,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 624,
											"name": "size",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								625,
								621
							]
						}
					]
				},
				{
					"id": 640,
					"name": "StoreInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "StoreInterface is the interface a storage adapter is expected to implement to\nbe used with high-level methods in this SDK. The require methods consist of\nan put function, a dequeue function and a get function."
					},
					"children": [
						{
							"id": 641,
							"name": "put",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "put() takes a batch file to store with the chosen hosting solution and\nreturns the URL of the file once stored.",
								"tags": [
									{
										"tag": "param",
										"text": "The path to and name of file",
										"param": "targetPath"
									},
									{
										"tag": "param",
										"text": "The file object to store on the chosen hosting solution",
										"param": "content"
									},
									{
										"tag": "returns",
										"text": "The URI of the hosted file\n"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 642,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 643,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 644,
													"name": "targetPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 645,
													"name": "content",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 592,
														"name": "Content"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "URL"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							}
						},
						{
							"id": 646,
							"name": "putStream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "putStream() takes a pass-through stream to upload data to chosen hosting solution and\nreturns the URL of the file once stored.",
								"tags": [
									{
										"tag": "param",
										"text": "The path to and name of file",
										"param": "targetPath"
									},
									{
										"tag": "param",
										"text": "A callback function that receives a writable to stream data to the chosen hosting solution",
										"param": "doWriteToStream"
									},
									{
										"tag": "returns",
										"text": "The URI of the hosted file\n"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 647,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 648,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 649,
													"name": "targetPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 650,
													"name": "doWriteToStream",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 637,
														"name": "WriteStreamCallback"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "URL"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								641,
								646
							]
						}
					]
				},
				{
					"id": 593,
					"name": "WriteStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "WriteStream: a write stream intended writing a batch file"
					},
					"children": [
						{
							"id": 608,
							"name": "end",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 609,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 610,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 611,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 612,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 613,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 614,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 615,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 616,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 617,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 618,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 619,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 594,
							"name": "write",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 595,
									"name": "write",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 596,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 597,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 598,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 599,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 600,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 601,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"name": "Error"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 602,
									"name": "write",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 603,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 604,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 605,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 606,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 607,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"name": "Error"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								608,
								594
							]
						}
					]
				},
				{
					"id": 637,
					"name": "WriteStreamCallback",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "PassThroughCallback: a callback intended for receiving a write stream to create a batch file"
					},
					"signatures": [
						{
							"id": 638,
							"name": "WriteStreamCallback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "PassThroughCallback: a callback intended for receiving a write stream to create a batch file"
							},
							"parameters": [
								{
									"id": 639,
									"name": "stream",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 593,
										"name": "WriteStream"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 592,
					"name": "Content",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Buffer"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						620,
						640,
						593,
						637
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						592
					]
				}
			]
		},
		{
			"id": 675,
			"name": "core/utilities",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 927,
					"name": "DSNPId",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 664
				},
				{
					"id": 929,
					"name": "DSNPUserId",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 668
				},
				{
					"id": 926,
					"name": "EmptyArrayError",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 653
				},
				{
					"id": 925,
					"name": "NotImplementedError",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 652
				},
				{
					"id": 930,
					"name": "convertBigNumberToDSNPUserId",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 669
				},
				{
					"id": 931,
					"name": "convertDSNPUserIdToBigNumber",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 672
				},
				{
					"id": 928,
					"name": "validateDSNPId",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 665
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						927,
						929,
						926,
						925,
						930,
						931,
						928
					]
				}
			]
		},
		{
			"id": 651,
			"name": "core/utilities/errors",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 653,
					"name": "EmptyArrayError",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 652,
					"name": "NotImplementedError",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						653,
						652
					]
				}
			]
		},
		{
			"id": 654,
			"name": "core/utilities/guards",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 655,
					"name": "notNull",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 656,
							"name": "notNull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 657,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 658,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "x",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "T"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						655
					]
				}
			]
		},
		{
			"id": 659,
			"name": "core/utilities/hash",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 660,
					"name": "hashPrefix",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 661,
							"name": "hashPrefix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 662,
									"name": "hash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						660
					]
				}
			]
		},
		{
			"id": 663,
			"name": "core/utilities/identifiers",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 664,
					"name": "DSNPId",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "DSNPId represents a DSNP message id following the DSNP\n[Message Identifiers](https://github.com/LibertyDSNP/spec/blob/main/pages/Messages/Identifiers.md)\nspecification."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 668,
					"name": "DSNPUserId",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "DSNPUserId represents a DSNP user id following the DSNP\n[Message Identifiers](https://github.com/LibertyDSNP/spec/blob/main/pages/Messages/Identifiers.md)\nspecification."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 669,
					"name": "convertBigNumberToDSNPUserId",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 670,
							"name": "convertBigNumberToDSNPUserId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "convertBigNumberToDSNPUserId() converts ethers' ridiculous BigNumber implementation\nhex output to a proper DSNP user id with zero padding.",
								"returns": "The same number as a properly formatted DSNPUserId\n"
							},
							"parameters": [
								{
									"id": 671,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The number to convert"
									},
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 672,
					"name": "convertDSNPUserIdToBigNumber",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 673,
							"name": "convertDSNPUserIdToBigNumber",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "convertDSNPUserIdToBigNumber() converts DSNP user ids to ethers BigNumbers.",
								"returns": "A big number representation of the same id\n"
							},
							"parameters": [
								{
									"id": 674,
									"name": "dsnpUserId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP user id to convert"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					]
				},
				{
					"id": 665,
					"name": "validateDSNPId",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 666,
							"name": "validateDSNPId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "validateDSNPId() validates a given string as a DSNPId. If the given string is\nvalid, true is returned. Otherwise, false is returned.",
								"returns": "True of false depending on whether the string is a valid DSNPId\n"
							},
							"parameters": [
								{
									"id": 667,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The string to validate"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "id",
								"asserts": false,
								"targetType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						664,
						668
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						669,
						672,
						665
					]
				}
			]
		},
		{
			"id": 676,
			"name": "core/utilities/json",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 677,
					"name": "sortObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 678,
							"name": "sortObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "sortObject() takes a javascript object and returns a copy of the object with\nall keys sorted recursively. This method is intended to be used to guarantee\nthat objects intended be JSON stringified always produce a consistent JSON\nstring, since implementations of [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#issue_with_plain_json.stringify_for_use_as_javascript)\ndo not necessarily guarantee key order.",
								"returns": "A sorted copy of the given object\n"
							},
							"parameters": [
								{
									"id": 679,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The object to recursively sort"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						677
					]
				}
			]
		},
		{
			"id": 746,
			"name": "generators",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 747,
					"name": "activityPub",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 680,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 748,
					"name": "batch",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 701,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 749,
					"name": "dsnp",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 729,
						"name": "__module"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						747,
						748,
						749
					]
				}
			]
		},
		{
			"id": 680,
			"name": "generators/activityPubGenerators",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 695,
					"name": "generateImageAttachment",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 696,
							"name": "generateImageAttachment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate an image NoteAttachment from a given url, or use the random image URL."
							},
							"parameters": [
								{
									"id": 697,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The url to generate the NoteAttachment around\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 145,
								"name": "ActivityPubAttachment"
							}
						}
					]
				},
				{
					"id": 686,
					"name": "generateNote",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 687,
							"name": "generateNote",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a Note type ActivityPub"
							},
							"parameters": [
								{
									"id": 688,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the HexString socialAddress to associate with making this note"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 689,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The message string to display in the note"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 690,
									"name": "hasAttachment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the NoteAttachments for pictures and videos in this Note.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 149,
								"name": "ActivityPub"
							}
						}
					]
				},
				{
					"id": 691,
					"name": "generatePerson",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 692,
							"name": "generatePerson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a Profile update. The type `Person` is not a `Profile`"
							},
							"parameters": [
								{
									"id": 693,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the HexString socialAddress to make this person update around"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 694,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "(optional) the new name of the profile update, or generate one.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 149,
								"name": "ActivityPub"
							}
						}
					]
				},
				{
					"id": 681,
					"name": "generateReply",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 682,
							"name": "generateReply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a Note ActivityPub that is a reply to another Note"
							},
							"parameters": [
								{
									"id": 683,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the HexString socialAddress to associate with making this note"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 684,
									"name": "reply",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The message string to display in the note"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 685,
									"name": "inReplyTo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the message ID of the original note.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 149,
								"name": "ActivityPub"
							}
						}
					]
				},
				{
					"id": 698,
					"name": "generateVideoAttachment",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 699,
							"name": "generateVideoAttachment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a video NoteAttachment from a given url, or use a random one."
							},
							"parameters": [
								{
									"id": 700,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The url to generate the NoteAttachment around\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 145,
								"name": "ActivityPubAttachment"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						695,
						686,
						691,
						681,
						698
					]
				}
			]
		},
		{
			"id": 701,
			"name": "generators/batchFileGenerators",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 707,
					"name": "BatchMessageType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 211,
								"name": "BatchBroadcastMessage"
							},
							{
								"type": "reference",
								"id": 213,
								"name": "BatchReactionMessage"
							},
							{
								"type": "reference",
								"id": 212,
								"name": "BatchReplyMessage"
							}
						]
					}
				},
				{
					"id": 702,
					"name": "DSNPBatchWriteResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 703,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 706,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 705,
									"name": "path",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 704,
									"name": "records",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										706,
										705,
										704
									]
								}
							]
						}
					}
				},
				{
					"id": 708,
					"name": "generateBatchBroadcast",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 709,
							"name": "generateBatchBroadcast",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "generateBatchBroadcast"
							},
							"parameters": [
								{
									"id": 710,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "a desired fromID (optional)\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 211,
								"name": "BatchBroadcastMessage"
							}
						}
					]
				},
				{
					"id": 711,
					"name": "generateBatchReaction",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 712,
							"name": "generateBatchReaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 713,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 213,
								"name": "BatchReactionMessage"
							}
						}
					]
				},
				{
					"id": 714,
					"name": "generateBatchReply",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 715,
							"name": "generateBatchReply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 716,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 212,
								"name": "BatchReplyMessage"
							}
						}
					]
				},
				{
					"id": 717,
					"name": "generateBroadcastBatchFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 718,
							"name": "generateBroadcastBatchFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 719,
									"name": "rootDir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 720,
									"name": "numMessages",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 702,
										"name": "DSNPBatchWriteResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 725,
					"name": "generateReactionBatchFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 726,
							"name": "generateReactionBatchFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 727,
									"name": "rootDir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 728,
									"name": "numMessages",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 702,
										"name": "DSNPBatchWriteResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 721,
					"name": "generateReplyBatchFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 722,
							"name": "generateReplyBatchFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 723,
									"name": "rootDir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 724,
									"name": "numMessages",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 702,
										"name": "DSNPBatchWriteResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						707,
						702
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						708,
						711,
						714,
						717,
						725,
						721
					]
				}
			]
		},
		{
			"id": 729,
			"name": "generators/dsnpGenerators",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 737,
					"name": "generateBroadcast",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 738,
							"name": "generateBroadcast",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 739,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 484,
								"name": "BroadcastMessage"
							}
						}
					]
				},
				{
					"id": 730,
					"name": "generateDSNPStream",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 731,
							"name": "generateDSNPStream",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "generateDSNPStream is meant to simulate incoming DSNP Messages of all kinds.\nIt generates a randomized list of DSNP messages at an estimated frequency for each type.",
								"returns": "an array of Messages.\n"
							},
							"parameters": [
								{
									"id": 732,
									"name": "messageCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "-"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 482,
									"name": "DSNPMessage"
								}
							}
						}
					]
				},
				{
					"id": 743,
					"name": "generateReaction",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 744,
							"name": "generateReaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "generateReaction"
							},
							"parameters": [
								{
									"id": 745,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "a desired fromID (optional)\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 506,
								"name": "ReactionMessage"
							}
						}
					]
				},
				{
					"id": 740,
					"name": "generateReply",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 741,
							"name": "generateReply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "generateReply"
							},
							"parameters": [
								{
									"id": 742,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "a desired fromID (optional)\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 494,
								"name": "ReplyMessage"
							}
						}
					]
				},
				{
					"id": 733,
					"name": "writeFixture",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 734,
							"name": "writeFixture",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "writeFixture writes messages as JSON to provided jsonFilePath",
								"returns": "number of bytes written\n"
							},
							"parameters": [
								{
									"id": 735,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the data to write out"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 482,
											"name": "DSNPMessage"
										}
									}
								},
								{
									"id": 736,
									"name": "jsonFilePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "where to write the output file"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						737,
						730,
						743,
						740,
						733
					]
				}
			]
		},
		{
			"id": 1,
			"name": "index",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 863,
					"name": "BaseFilters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 866,
							"name": "excludeHandles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 867,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 865,
							"name": "includeHandles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 864,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								866,
								867,
								865,
								864
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 868,
							"name": "FetchFilters"
						}
					]
				},
				{
					"id": 762,
					"name": "Config",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "The Config Interface provides for various settings and plugable modules."
					},
					"children": [
						{
							"id": 767,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Contracts are different addresses for specific contracts or for running custom tests"
							},
							"type": {
								"type": "reference",
								"id": 755,
								"name": "Contracts"
							}
						},
						{
							"id": 768,
							"name": "currentFromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "currentFromId stores the id of the currently authenticated user"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 763,
							"name": "provider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An [Ethers.js Provider](https://docs.ethers.io/v5/api/provider/)"
							},
							"type": {
								"type": "reference",
								"name": "Provider"
							}
						},
						{
							"id": 765,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue manages Announcements waiting to be batched"
							},
							"type": {
								"type": "reference",
								"id": 575,
								"name": "QueueInterface"
							}
						},
						{
							"id": 764,
							"name": "signer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An [Ethers.js Signer](https://docs.ethers.io/v5/api/signer/)"
							},
							"type": {
								"type": "reference",
								"name": "Signer"
							}
						},
						{
							"id": 766,
							"name": "store",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Storage handles storing batch, content, and other media files at a publicly accessible location"
							},
							"type": {
								"type": "reference",
								"id": 640,
								"name": "StoreInterface"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								767,
								768,
								763,
								765,
								764,
								766
							]
						}
					],
					"indexSignature": {
						"id": 769,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"comment": {
							"shortText": "to allow access of keys by name"
						},
						"parameters": [
							{
								"id": 770,
								"name": "index",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				},
				{
					"id": 755,
					"name": "Contracts",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 756,
							"name": "announcer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Address of the Batch Announce contract"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 757,
							"name": "beacon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Address of the Beacon contract"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 758,
							"name": "beaconFactory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Address of the Beacon Proxy Factory contract"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 760,
							"name": "identityCloneFactory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Address of the Identity Clone Proxy Factory contract"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 759,
							"name": "identityLogic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Address of the Identity Logic contract"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 761,
							"name": "registry",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Address of the Registry contract"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								756,
								757,
								758,
								760,
								759,
								761
							]
						}
					]
				},
				{
					"id": 868,
					"name": "FetchFilters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 874,
							"name": "excludeHandles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 866,
								"name": "BaseFilters.excludeHandles"
							}
						},
						{
							"id": 871,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 875,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 867,
								"name": "BaseFilters.inReplyTo"
							}
						},
						{
							"id": 873,
							"name": "includeHandles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 865,
								"name": "BaseFilters.includeHandles"
							}
						},
						{
							"id": 869,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 870,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 872,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 864,
								"name": "BaseFilters.types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								874,
								871,
								875,
								873,
								869,
								870,
								872
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 863,
							"name": "BaseFilters"
						}
					]
				},
				{
					"id": 771,
					"name": "ConfigOpts",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "ConfigOpts represents override options to be passed when fetching the config"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 762,
								"name": "Config"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 9,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 10,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 83,
									"name": "InvalidActivityPubOpts",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error"
									},
									"defaultValue": "..."
								},
								{
									"id": 84,
									"name": "InvalidInReplyTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error"
									},
									"defaultValue": "..."
								},
								{
									"id": 107,
									"name": "MissingContract",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error"
									},
									"defaultValue": "..."
								},
								{
									"id": 109,
									"name": "MissingProvider",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error"
									},
									"defaultValue": "..."
								},
								{
									"id": 108,
									"name": "MissingSigner",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error"
									},
									"defaultValue": "..."
								},
								{
									"id": 110,
									"name": "MissingStore",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error"
									},
									"defaultValue": "..."
								},
								{
									"id": 111,
									"name": "MissingUser",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error"
									},
									"defaultValue": "..."
								},
								{
									"id": 73,
									"name": "availabilityFilter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 74,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 75,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "availabilityFilter() takes a list of handles returning a filtered list of just the ones that are available",
														"returns": "The filtered list of handles that are currently available\n"
													},
													"parameters": [
														{
															"id": 76,
															"name": "handles",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "A list of handles to check for availability"
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														},
														{
															"id": 77,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 85,
									"name": "broadcast",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 86,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 87,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "broadcast() creates an activity pub file with the given content options,\nuploads it with a random filename using the configured storage adapter and\ncreates a DSNP broadcast message for the hosted file for later announcement.",
														"returns": "A Signed DSNP Broadcast message ready for inclusion in a batch\n",
														"tags": [
															{
																"tag": "throws",
																"text": "{@link MissingSigner}\nThrown if the signer is not configured."
															}
														]
													},
													"parameters": [
														{
															"id": 88,
															"name": "contentOptions",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "Options for the activity pub content to generate"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 149,
																		"name": "ActivityPub"
																	}
																],
																"name": "Partial"
															}
														},
														{
															"id": 89,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 211,
																"name": "BatchBroadcastMessage"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 11,
									"name": "core",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 466,
										"name": "__module"
									}
								},
								{
									"id": 51,
									"name": "createRegistration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 52,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 53,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "createRegistration() creates a new identity for a public key and registers a handle to it.\nThis function will wait for the identity to land on chain before resolving.",
														"returns": "id of identity created\n"
													},
													"parameters": [
														{
															"id": 54,
															"name": "addr",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "public key address that will be used to control identity delegate"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 55,
															"name": "handle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "name of identity (must be globally unique)"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 56,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 21,
									"name": "fetchEvents",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 22,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 23,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "fetchEvents() fetches the most recent activity pub events matching the given\nsearch criteria. This method is not yet implemented.",
														"returns": "An array of events\n"
													},
													"parameters": [
														{
															"id": 24,
															"name": "_filters",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "Any filter options for including or excluding certain events"
															},
															"type": {
																"type": "reference",
																"id": 868,
																"name": "FetchFilters"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 476,
																	"name": "DSNPType"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 25,
									"name": "follow",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 26,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 27,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "follow() creates a follow event and returns it.",
														"returns": "The signed DSNP Graph Change message\n"
													},
													"parameters": [
														{
															"id": 28,
															"name": "followeeId",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The id of the user to follow"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 29,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 215,
																"name": "BatchGraphChangeMessage"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 112,
									"name": "getConfig",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 113,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 114,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "getConfig() fetches the current configuration settings and returns them.",
														"returns": "The current configuration settings with ConfigOpts as overrides.\n"
													},
													"parameters": [
														{
															"id": 115,
															"name": "overrides",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Config overrides for this request"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 762,
														"name": "Config"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 140,
									"name": "getContracts",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 141,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 142,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the contracts.  Since this is a required field, this is a plain getter."
													},
													"parameters": [
														{
															"id": 143,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "overrides for the current configuration.\n"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 755,
														"name": "Contracts"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 46,
									"name": "getFollowees",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 47,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 48,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "getFollowees() scans the current state of the network and returns an array of\nall users being followed by the given follower handle. This method is not yet\nimplemented.",
														"returns": "An array of all users followed by the follower user\n"
													},
													"parameters": [
														{
															"id": 49,
															"name": "_follower",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. The follower id to fetch followees for. Defaults to the current user."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 50,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 414,
																	"name": "Registration"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 41,
									"name": "getFollowers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 43,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "getFollowers() scans the current state of the network and returns an array of\nall users following the given followee handle. This method is not yet\nimplemented.",
														"returns": "An array of all users following the followee\n"
													},
													"parameters": [
														{
															"id": 44,
															"name": "_followee",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. The followee id to fetch followers for. Defaults to the current user."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 45,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 414,
																	"name": "Registration"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 136,
									"name": "getQueue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 137,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 138,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the queue.  Since this is a required field, this is a plain getter."
													},
													"parameters": [
														{
															"id": 139,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "overrides for the current configuration.\n"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 575,
														"name": "QueueInterface"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 78,
									"name": "isAvailable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 79,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 80,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "isAvailable() checks to see if the given handle is available",
														"returns": "boolean If the handle is available\n"
													},
													"parameters": [
														{
															"id": 81,
															"name": "handle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The handle to test for availability"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 82,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 35,
									"name": "isFollowing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 36,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 37,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "isFollowing() scans the current state of the network and returns a boolean\nrepresenting whether or not a given user is following another given user.\nThis method is not yet implemented.",
														"returns": "A boolean representing whether or not the follower is following the followee\n"
													},
													"parameters": [
														{
															"id": 38,
															"name": "_follower",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The id of the follower"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 39,
															"name": "_followee",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. The id of the following user. Defaults to current user."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 40,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 102,
									"name": "profile",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 103,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 104,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "profile() creates an activity pub file with the given content options,\nuploads it with a random filename using the configured storage adapter and\ncreates a DSNP profile message for the hosted file for later announcement.",
														"returns": "A Signed DSNP Profile message ready for inclusion in a batch\n",
														"tags": [
															{
																"tag": "throws",
																"text": "{@link MissingSigner}\nThrown if the signer is not configured."
															}
														]
													},
													"parameters": [
														{
															"id": 105,
															"name": "contentOptions",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "Options for the activity pub content to generate"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 149,
																		"name": "ActivityPub"
																	}
																],
																"name": "Partial"
															}
														},
														{
															"id": 106,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 214,
																"name": "BatchProfileMessage"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 96,
									"name": "react",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 97,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 98,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "react() creates a DSNP reaction message for later announcement.",
														"returns": "A Signed DSNP Reaction message ready for inclusion in a batch\n"
													},
													"parameters": [
														{
															"id": 99,
															"name": "emoji",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The emoji with which to react"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 100,
															"name": "inReplyTo",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The DSNP Id of the message to which to react"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 101,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 213,
																"name": "BatchReactionMessage"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 90,
									"name": "reply",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 91,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 92,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "reply() creates an activity pub file with the given content options,\nuploads it with a random filename using the configured storage adapter and\ncreates a DSNP reply message for the hosted file for later announcement.",
														"returns": "A Signed DSNP Reply message ready for inclusion in a batch\n"
													},
													"parameters": [
														{
															"id": 93,
															"name": "contentOptions",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "Options for the activity pub content to generate"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 149,
																		"name": "ActivityPub"
																	}
																],
																"name": "Partial"
															}
														},
														{
															"id": 94,
															"name": "inReplyTo",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The DSNP Id of the message that this message is in reply to"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 95,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 212,
																"name": "BatchReplyMessage"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 132,
									"name": "requireGetCurrentFromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 133,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 134,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the currentFromId and if undefined, throw.",
														"returns": "a never-undefined currentFromId\n"
													},
													"parameters": [
														{
															"id": 135,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "overrides for the current configuration."
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 120,
									"name": "requireGetProvider",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 121,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 122,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the provider and if undefined, throw.",
														"returns": "a never-undefined provider\n"
													},
													"parameters": [
														{
															"id": 123,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "overrides for the current configuration."
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Provider"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 124,
									"name": "requireGetSigner",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 125,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 126,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the signer and if undefined, throw.",
														"returns": "a never-undefined signer\n"
													},
													"parameters": [
														{
															"id": 127,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "overrides for the current configuration."
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Signer"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 128,
									"name": "requireGetStore",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 130,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the store and if undefined, throw.",
														"returns": "a never-undefined store\n"
													},
													"parameters": [
														{
															"id": 131,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "overrides for the current configuration."
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 640,
														"name": "StoreInterface"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 63,
									"name": "resolveHandle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 64,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 65,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the current registration from a handle",
														"returns": "The Registration object with Handle, DSNP Id, and Identity contract address\n"
													},
													"parameters": [
														{
															"id": 66,
															"name": "handle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The Registry Handle"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 67,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 414,
																		"name": "Registration"
																	}
																]
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 68,
									"name": "resolveId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 69,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 70,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the current registration from a DSNP Id",
														"returns": "The Registration object with Handle, DSNP User Id, and Identity contract address\n"
													},
													"parameters": [
														{
															"id": 71,
															"name": "dsnpUserId",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The DSNP User Id"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 72,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 414,
																		"name": "Registration"
																	}
																]
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 116,
									"name": "setConfig",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 117,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 118,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "setConfig() sets the current configuration with the given object. Any keys\npreviously set on the config object will not be removed. To remove a config\noption, this method should be called with undefined passed for the given key\nto override it.",
														"returns": "The newly constructed config\n"
													},
													"parameters": [
														{
															"id": 119,
															"name": "newConfig",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The configuration settings to set with"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 762,
														"name": "Config"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 12,
									"name": "subscribe",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 13,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 14,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "subscribe() takes a callback to invoke upon receiving new activity pub events\nmatching the given criteria. This method only works if the web3 provider set\nin the configuration is a websocket provider. This method is not yet\nimplemented.",
														"returns": "A subscription id to unsubscribe later if needed\n"
													},
													"parameters": [
														{
															"id": 15,
															"name": "_filters",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "Any filter options for including or excluding certain events"
															},
															"type": {
																"type": "reference",
																"id": 863,
																"name": "BaseFilters"
															}
														},
														{
															"id": 16,
															"name": "_callback",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The callback function to be called when an event is received"
															},
															"type": {
																"type": "reference",
																"name": "SubscriptionCallbackFn"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 30,
									"name": "unfollow",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 32,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "unfollow() creates an unfollow event and returns it.",
														"returns": "The signed DSNP Graph Change message\n"
													},
													"parameters": [
														{
															"id": 33,
															"name": "followeeId",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The id of the user to unfollow"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 34,
															"name": "opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 215,
																"name": "BatchGraphChangeMessage"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 17,
									"name": "unsubscribe",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 18,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 19,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "unsubscribe() removes a subscription callback created with the subscribe\nmethod. This method only works if the web3 provider set in the configuration\nis a websocket provider. This method is not yet implemented."
													},
													"parameters": [
														{
															"id": 20,
															"name": "_id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The ID of the subscription to close\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 57,
									"name": "updateRegistration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 59,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "updateRegistration() updates registry data for a handle. This method\nwill only work if the given handle has already been authenticated. This\nmethod is not yet implemented.",
														"returns": "The pending transaction\n"
													},
													"parameters": [
														{
															"id": 60,
															"name": "_id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The Handle of the user for which to fetch profile data"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 61,
															"name": "_registration",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "Any updates to be merged into the current profile data"
															},
															"type": {
																"type": "reference",
																"id": 414,
																"name": "Registration"
															}
														},
														{
															"id": 62,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Optional. Configuration overrides, such as from address, if any"
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "ContractTransaction"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										83,
										84,
										107,
										109,
										108,
										110,
										111,
										73,
										85,
										11,
										51,
										21,
										25,
										112,
										140,
										46,
										41,
										136,
										78,
										35,
										102,
										96,
										90,
										132,
										120,
										124,
										128,
										63,
										68,
										116,
										12,
										30,
										17,
										57
									]
								}
							]
						}
					}
				},
				{
					"id": 796,
					"name": "InvalidActivityPubOpts",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "InvalidActivityPubOpts represents an error in the activity pub options\nprovided to a method."
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 797,
					"name": "InvalidInReplyTo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "InvalidInReplyTo represents an error in the DSNP Id provided for the\ninReplyTo parameter."
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 750,
					"name": "MissingContract",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 752,
					"name": "MissingProvider",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 751,
					"name": "MissingSigner",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 753,
					"name": "MissingStore",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 754,
					"name": "MissingUser",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 4,
					"name": "config",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 5,
					"name": "content",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 2,
					"name": "core",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 466,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 3,
					"name": "generators",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 746,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 6,
					"name": "handles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 7,
					"name": "network",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 8,
					"name": "search",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 834,
					"name": "availabilityFilter",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 835,
							"name": "availabilityFilter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "availabilityFilter() takes a list of handles returning a filtered list of just the ones that are available",
								"returns": "The filtered list of handles that are currently available\n"
							},
							"parameters": [
								{
									"id": 836,
									"name": "handles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A list of handles to check for availability"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 837,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 798,
					"name": "broadcast",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 799,
							"name": "broadcast",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "broadcast() creates an activity pub file with the given content options,\nuploads it with a random filename using the configured storage adapter and\ncreates a DSNP broadcast message for the hosted file for later announcement.",
								"returns": "A Signed DSNP Broadcast message ready for inclusion in a batch\n",
								"tags": [
									{
										"tag": "throws",
										"text": "{@link MissingSigner}\nThrown if the signer is not configured."
									}
								]
							},
							"parameters": [
								{
									"id": 800,
									"name": "contentOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for the activity pub content to generate"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 149,
												"name": "ActivityPub"
											}
										],
										"name": "Partial"
									}
								},
								{
									"id": 801,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 211,
										"name": "BatchBroadcastMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 816,
					"name": "createRegistration",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 817,
							"name": "createRegistration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createRegistration() creates a new identity for a public key and registers a handle to it.\nThis function will wait for the identity to land on chain before resolving.",
								"returns": "id of identity created\n"
							},
							"parameters": [
								{
									"id": 818,
									"name": "addr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "public key address that will be used to control identity delegate"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 819,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "name of identity (must be globally unique)"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 820,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 883,
					"name": "fetchEvents",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 884,
							"name": "fetchEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "fetchEvents() fetches the most recent activity pub events matching the given\nsearch criteria. This method is not yet implemented.",
								"returns": "An array of events\n"
							},
							"parameters": [
								{
									"id": 885,
									"name": "_filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Any filter options for including or excluding certain events"
									},
									"type": {
										"type": "reference",
										"id": 868,
										"name": "FetchFilters"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 476,
											"name": "DSNPType"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 842,
					"name": "follow",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 843,
							"name": "follow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "follow() creates a follow event and returns it.",
								"returns": "The signed DSNP Graph Change message\n"
							},
							"parameters": [
								{
									"id": 844,
									"name": "followeeId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user to follow"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 845,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 215,
										"name": "BatchGraphChangeMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 772,
					"name": "getConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 773,
							"name": "getConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getConfig() fetches the current configuration settings and returns them.",
								"returns": "The current configuration settings with ConfigOpts as overrides.\n"
							},
							"parameters": [
								{
									"id": 774,
									"name": "overrides",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Config overrides for this request"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 762,
								"name": "Config"
							}
						}
					]
				},
				{
					"id": 793,
					"name": "getContracts",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 794,
							"name": "getContracts",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the contracts.  Since this is a required field, this is a plain getter."
							},
							"parameters": [
								{
									"id": 795,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "overrides for the current configuration.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 755,
								"name": "Contracts"
							}
						}
					]
				},
				{
					"id": 859,
					"name": "getFollowees",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 860,
							"name": "getFollowees",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getFollowees() scans the current state of the network and returns an array of\nall users being followed by the given follower handle. This method is not yet\nimplemented.",
								"returns": "An array of all users followed by the follower user\n"
							},
							"parameters": [
								{
									"id": 861,
									"name": "_follower",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. The follower id to fetch followees for. Defaults to the current user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 862,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 414,
											"name": "Registration"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 855,
					"name": "getFollowers",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 856,
							"name": "getFollowers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getFollowers() scans the current state of the network and returns an array of\nall users following the given followee handle. This method is not yet\nimplemented.",
								"returns": "An array of all users following the followee\n"
							},
							"parameters": [
								{
									"id": 857,
									"name": "_followee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. The followee id to fetch followers for. Defaults to the current user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 858,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 414,
											"name": "Registration"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 790,
					"name": "getQueue",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 791,
							"name": "getQueue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the queue.  Since this is a required field, this is a plain getter."
							},
							"parameters": [
								{
									"id": 792,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "overrides for the current configuration.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 575,
								"name": "QueueInterface"
							}
						}
					]
				},
				{
					"id": 838,
					"name": "isAvailable",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 839,
							"name": "isAvailable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "isAvailable() checks to see if the given handle is available",
								"returns": "boolean If the handle is available\n"
							},
							"parameters": [
								{
									"id": 840,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The handle to test for availability"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 841,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 850,
					"name": "isFollowing",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 851,
							"name": "isFollowing",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "isFollowing() scans the current state of the network and returns a boolean\nrepresenting whether or not a given user is following another given user.\nThis method is not yet implemented.",
								"returns": "A boolean representing whether or not the follower is following the followee\n"
							},
							"parameters": [
								{
									"id": 852,
									"name": "_follower",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the follower"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 853,
									"name": "_followee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. The id of the following user. Defaults to current user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 854,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 812,
					"name": "profile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 813,
							"name": "profile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "profile() creates an activity pub file with the given content options,\nuploads it with a random filename using the configured storage adapter and\ncreates a DSNP profile message for the hosted file for later announcement.",
								"returns": "A Signed DSNP Profile message ready for inclusion in a batch\n",
								"tags": [
									{
										"tag": "throws",
										"text": "{@link MissingSigner}\nThrown if the signer is not configured."
									}
								]
							},
							"parameters": [
								{
									"id": 814,
									"name": "contentOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for the activity pub content to generate"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 149,
												"name": "ActivityPub"
											}
										],
										"name": "Partial"
									}
								},
								{
									"id": 815,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 214,
										"name": "BatchProfileMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 807,
					"name": "react",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 808,
							"name": "react",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "react() creates a DSNP reaction message for later announcement.",
								"returns": "A Signed DSNP Reaction message ready for inclusion in a batch\n"
							},
							"parameters": [
								{
									"id": 809,
									"name": "emoji",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The emoji with which to react"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 810,
									"name": "inReplyTo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP Id of the message to which to react"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 811,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 213,
										"name": "BatchReactionMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 802,
					"name": "reply",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 803,
							"name": "reply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "reply() creates an activity pub file with the given content options,\nuploads it with a random filename using the configured storage adapter and\ncreates a DSNP reply message for the hosted file for later announcement.",
								"returns": "A Signed DSNP Reply message ready for inclusion in a batch\n"
							},
							"parameters": [
								{
									"id": 804,
									"name": "contentOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for the activity pub content to generate"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 149,
												"name": "ActivityPub"
											}
										],
										"name": "Partial"
									}
								},
								{
									"id": 805,
									"name": "inReplyTo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP Id of the message that this message is in reply to"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 806,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 212,
										"name": "BatchReplyMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 787,
					"name": "requireGetCurrentFromId",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 788,
							"name": "requireGetCurrentFromId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the currentFromId and if undefined, throw.",
								"returns": "a never-undefined currentFromId\n"
							},
							"parameters": [
								{
									"id": 789,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "overrides for the current configuration."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 778,
					"name": "requireGetProvider",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 779,
							"name": "requireGetProvider",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the provider and if undefined, throw.",
								"returns": "a never-undefined provider\n"
							},
							"parameters": [
								{
									"id": 780,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "overrides for the current configuration."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Provider"
							}
						}
					]
				},
				{
					"id": 781,
					"name": "requireGetSigner",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 782,
							"name": "requireGetSigner",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the signer and if undefined, throw.",
								"returns": "a never-undefined signer\n"
							},
							"parameters": [
								{
									"id": 783,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "overrides for the current configuration."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Signer"
							}
						}
					]
				},
				{
					"id": 784,
					"name": "requireGetStore",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 785,
							"name": "requireGetStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the store and if undefined, throw.",
								"returns": "a never-undefined store\n"
							},
							"parameters": [
								{
									"id": 786,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "overrides for the current configuration."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 640,
								"name": "StoreInterface"
							}
						}
					]
				},
				{
					"id": 826,
					"name": "resolveHandle",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 827,
							"name": "resolveHandle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the current registration from a handle",
								"returns": "The Registration object with Handle, DSNP Id, and Identity contract address\n"
							},
							"parameters": [
								{
									"id": 828,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The Registry Handle"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 829,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 414,
												"name": "Registration"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 830,
					"name": "resolveId",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 831,
							"name": "resolveId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the current registration from a DSNP Id",
								"returns": "The Registration object with Handle, DSNP User Id, and Identity contract address\n"
							},
							"parameters": [
								{
									"id": 832,
									"name": "dsnpUserId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP User Id"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 833,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 414,
												"name": "Registration"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 775,
					"name": "setConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 776,
							"name": "setConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "setConfig() sets the current configuration with the given object. Any keys\npreviously set on the config object will not be removed. To remove a config\noption, this method should be called with undefined passed for the given key\nto override it.",
								"returns": "The newly constructed config\n"
							},
							"parameters": [
								{
									"id": 777,
									"name": "newConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The configuration settings to set with"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 762,
								"name": "Config"
							}
						}
					]
				},
				{
					"id": 876,
					"name": "subscribe",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 877,
							"name": "subscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "subscribe() takes a callback to invoke upon receiving new activity pub events\nmatching the given criteria. This method only works if the web3 provider set\nin the configuration is a websocket provider. This method is not yet\nimplemented.",
								"returns": "A subscription id to unsubscribe later if needed\n"
							},
							"parameters": [
								{
									"id": 878,
									"name": "_filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Any filter options for including or excluding certain events"
									},
									"type": {
										"type": "reference",
										"id": 863,
										"name": "BaseFilters"
									}
								},
								{
									"id": 879,
									"name": "_callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The callback function to be called when an event is received"
									},
									"type": {
										"type": "reference",
										"name": "SubscriptionCallbackFn"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 846,
					"name": "unfollow",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 847,
							"name": "unfollow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "unfollow() creates an unfollow event and returns it.",
								"returns": "The signed DSNP Graph Change message\n"
							},
							"parameters": [
								{
									"id": 848,
									"name": "followeeId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user to unfollow"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 849,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 215,
										"name": "BatchGraphChangeMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 880,
					"name": "unsubscribe",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 881,
							"name": "unsubscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "unsubscribe() removes a subscription callback created with the subscribe\nmethod. This method only works if the web3 provider set in the configuration\nis a websocket provider. This method is not yet implemented."
							},
							"parameters": [
								{
									"id": 882,
									"name": "_id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the subscription to close\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 821,
					"name": "updateRegistration",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 822,
							"name": "updateRegistration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "updateRegistration() updates registry data for a handle. This method\nwill only work if the given handle has already been authenticated. This\nmethod is not yet implemented.",
								"returns": "The pending transaction\n"
							},
							"parameters": [
								{
									"id": 823,
									"name": "_id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The Handle of the user for which to fetch profile data"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 824,
									"name": "_registration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Any updates to be merged into the current profile data"
									},
									"type": {
										"type": "reference",
										"id": 414,
										"name": "Registration"
									}
								},
								{
									"id": 825,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						863,
						762,
						755,
						868
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						771
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						9
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						796,
						797,
						750,
						752,
						751,
						753,
						754,
						4,
						5,
						2,
						3,
						6,
						7,
						8
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						834,
						798,
						816,
						883,
						842,
						772,
						793,
						859,
						855,
						790,
						838,
						850,
						812,
						807,
						802,
						787,
						778,
						781,
						784,
						826,
						830,
						775,
						876,
						846,
						880,
						821
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				466,
				177,
				144,
				216,
				178,
				205,
				219,
				408,
				337,
				347,
				371,
				413,
				450,
				474,
				475,
				554,
				555,
				573,
				590,
				591,
				675,
				651,
				654,
				659,
				663,
				676,
				746,
				680,
				701,
				729,
				1
			]
		}
	]
}