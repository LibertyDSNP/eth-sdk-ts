{
	"id": 0,
	"name": "@dsnp/sdk",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 382,
			"name": "core",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 383,
					"name": "activityPub",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 132,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 384,
					"name": "batch",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 176,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 385,
					"name": "contracts",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 348,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 386,
					"name": "messages",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 390,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 387,
					"name": "queue",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 443,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 388,
					"name": "store",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 487,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 389,
					"name": "utilities",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 551,
						"name": "__module"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						383,
						384,
						385,
						386,
						387,
						388,
						389
					]
				}
			]
		},
		{
			"id": 132,
			"name": "core/activityPub",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 655,
					"name": "ActivityPub",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 106
				},
				{
					"id": 654,
					"name": "ActivityPubAttachment",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 102
				},
				{
					"id": 656,
					"name": "ActivityPubOpts",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 116
				},
				{
					"id": 657,
					"name": "create",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 117
				},
				{
					"id": 661,
					"name": "hash",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 129
				},
				{
					"id": 660,
					"name": "serialize",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 126
				},
				{
					"id": 658,
					"name": "validate",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 120
				},
				{
					"id": 659,
					"name": "validateReply",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 123
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						655,
						654,
						656,
						657,
						661,
						660,
						658,
						659
					]
				}
			]
		},
		{
			"id": 101,
			"name": "core/activityPub/activityPub",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 106,
					"name": "ActivityPub",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ActivityPub represents an activity pub object"
					},
					"children": [
						{
							"id": 107,
							"name": "@context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 115,
							"name": "attachments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 102,
									"name": "ActivityPubAttachment"
								}
							}
						},
						{
							"id": 114,
							"name": "attributedTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 110,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 113,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 109,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 112,
							"name": "published",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 108,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 111,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								107,
								115,
								114,
								110,
								113,
								109,
								112,
								108,
								111
							]
						}
					]
				},
				{
					"id": 102,
					"name": "ActivityPubAttachment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ActivityPubAttachment represents an attachment to an activity pub object"
					},
					"children": [
						{
							"id": 104,
							"name": "mediaType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 103,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "PubType"
							}
						},
						{
							"id": 105,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								104,
								103,
								105
							]
						}
					]
				},
				{
					"id": 116,
					"name": "ActivityPubOpts",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "ActivityPubOpts represents options to be passed to the create method."
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 106,
								"name": "ActivityPub"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 117,
					"name": "create",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 118,
							"name": "create",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "create() provides a simple factory for generating activityPub notes.",
								"returns": "An activity pub object\n"
							},
							"parameters": [
								{
									"id": 119,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for the activity pub object to create"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 106,
												"name": "ActivityPub"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"name": "ActivityPub"
							}
						}
					]
				},
				{
					"id": 129,
					"name": "hash",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 130,
							"name": "hash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "hash() provides a simple way to hash activityPub objects while guaranteeing\nthat identical objects with different key orders still return the same hash.\nThe underlying hash method used is [Keccak256](https://en.wikipedia.org/wiki/SHA-3).",
								"returns": "A hexadecimal string containing the Keccak hash\n"
							},
							"parameters": [
								{
									"id": 131,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The activity pub object to hash"
									},
									"type": {
										"type": "reference",
										"id": 106,
										"name": "ActivityPub"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 126,
					"name": "serialize",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 127,
							"name": "serialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "serialize() converts an activityPub object to string for upload via the\nstorage adapter.",
								"returns": "A string representation of the activity pub object\n"
							},
							"parameters": [
								{
									"id": 128,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The activity pub object to hash"
									},
									"type": {
										"type": "reference",
										"id": 106,
										"name": "ActivityPub"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 120,
					"name": "validate",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 121,
							"name": "validate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "validate() returns true if the object provided is a valid activityPub.\nOtherwise, it returns false.",
								"returns": "True or false depending on whether the given object is a valid\n"
							},
							"parameters": [
								{
									"id": 122,
									"name": "activityPub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An object to be validated against the activity pub standard"
									},
									"type": {
										"type": "reference",
										"id": 106,
										"name": "ActivityPub"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "validateReply",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 124,
							"name": "validateReply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "validateReply() returns true if the object provided is a valid activityPub\nreply. Otherwise, it returns false.",
								"returns": "True or false depending on whether the given object is a valid\n"
							},
							"parameters": [
								{
									"id": 125,
									"name": "activityPub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An object to be validated against the activity pub standard"
									},
									"type": {
										"type": "reference",
										"id": 106,
										"name": "ActivityPub"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						106,
						102
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						116
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						117,
						129,
						126,
						120,
						123
					]
				}
			]
		},
		{
			"id": 176,
			"name": "core/batch",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 662,
					"name": "BatchFileObject",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 134
				},
				{
					"id": 667,
					"name": "batchIncludes",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 148
				},
				{
					"id": 663,
					"name": "createFile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 135
				},
				{
					"id": 665,
					"name": "openFile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 141
				},
				{
					"id": 664,
					"name": "openURL",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 138
				},
				{
					"id": 666,
					"name": "readFile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 144
				},
				{
					"id": 177,
					"name": "batchMesssages",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 153,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 178,
					"name": "parquetSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 179,
						"name": "__module"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						662,
						667,
						663,
						665,
						664,
						666
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						177,
						178
					]
				}
			]
		},
		{
			"id": 133,
			"name": "core/batch/batch",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 134,
					"name": "BatchFileObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 148,
					"name": "batchIncludes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 149,
							"name": "batchIncludes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "batchIncludes() checks if a column/field in a\nParquet batch file contains an item.",
								"returns": "void.\n"
							},
							"parameters": [
								{
									"id": 150,
									"name": "reader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a ParquetReader object."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 151,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the column name to check if a value is included."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 152,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a value."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 135,
					"name": "createFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 136,
							"name": "createFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createFile() takes a series of DSNP messages and returns a Batch file\nobject for publishing. This method is not yet implemented.",
								"returns": "A batch file object\n"
							},
							"parameters": [
								{
									"id": 137,
									"name": "_events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 392,
											"name": "DSNPType"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 141,
					"name": "openFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 142,
							"name": "openFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "openFile() allows users to open a parquet file with a path.",
								"returns": "a ParquetReader object.\n"
							},
							"parameters": [
								{
									"id": 143,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "to parquet file."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 138,
					"name": "openURL",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 139,
							"name": "openURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "openURL() allows users to open a parquet file with a URL.",
								"returns": "a ParquetReader object.\n"
							},
							"parameters": [
								{
									"id": 140,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a URL to fetch parquet file from."
									},
									"type": {
										"type": "reference",
										"name": "URL"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 144,
					"name": "readFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 145,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "readFile() reads a Parquet file by row.",
								"returns": "void.\n"
							},
							"parameters": [
								{
									"id": 146,
									"name": "reader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a ParquetReader object."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 147,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ReadRowFunction"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						134
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						148,
						135,
						141,
						138,
						144
					]
				}
			]
		},
		{
			"id": 153,
			"name": "core/batch/batchMesssages",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 154,
					"name": "BatchBroadcastMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 157,
							"name": "contentHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 402,
								"name": "BroadcastMessage.contentHash"
							}
						},
						{
							"id": 156,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 394,
								"name": "Broadcast"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 401,
								"name": "BroadcastMessage.dsnpType"
							}
						},
						{
							"id": 158,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 403,
								"name": "BroadcastMessage.fromId"
							}
						},
						{
							"id": 155,
							"name": "signature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 159,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 404,
								"name": "BroadcastMessage.uri"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								157,
								156,
								158,
								155,
								159
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 400,
							"name": "BroadcastMessage"
						}
					]
				},
				{
					"id": 167,
					"name": "BatchReactionMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 169,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 396,
								"name": "Reaction"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 423,
								"name": "ReactionMessage.dsnpType"
							}
						},
						{
							"id": 170,
							"name": "emoji",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 424,
								"name": "ReactionMessage.emoji"
							}
						},
						{
							"id": 171,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 425,
								"name": "ReactionMessage.fromId"
							}
						},
						{
							"id": 172,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 426,
								"name": "ReactionMessage.inReplyTo"
							}
						},
						{
							"id": 168,
							"name": "signature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								169,
								170,
								171,
								172,
								168
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 422,
							"name": "ReactionMessage"
						}
					]
				},
				{
					"id": 160,
					"name": "BatchReplyMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 163,
							"name": "contentHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 412,
								"name": "ReplyMessage.contentHash"
							}
						},
						{
							"id": 162,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 395,
								"name": "Reply"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 411,
								"name": "ReplyMessage.dsnpType"
							}
						},
						{
							"id": 164,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 413,
								"name": "ReplyMessage.fromId"
							}
						},
						{
							"id": 165,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 414,
								"name": "ReplyMessage.inReplyTo"
							}
						},
						{
							"id": 161,
							"name": "signature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 166,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 415,
								"name": "ReplyMessage.uri"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								163,
								162,
								164,
								165,
								161,
								166
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 410,
							"name": "ReplyMessage"
						}
					]
				},
				{
					"id": 173,
					"name": "DSNPBatchMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 175,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 392,
								"name": "DSNPType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 399,
								"name": "DSNPMessage.dsnpType"
							}
						},
						{
							"id": 174,
							"name": "signature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								175,
								174
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 398,
							"name": "DSNPMessage"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						154,
						167,
						160,
						173
					]
				}
			]
		},
		{
			"id": 179,
			"name": "core/batch/parquetSchema",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 180,
					"name": "BloomFilterColumnOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Parquet Schemas for DNSP Message Types\nSee DSNP type definitions in DSNP.d.ts for additional documentation of fields."
					},
					"children": [
						{
							"id": 181,
							"name": "column",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 183,
							"name": "falsePositiveRate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 184,
							"name": "numDistinct",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 182,
							"name": "numFilterBytes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								181,
								183,
								184,
								182
							]
						}
					]
				},
				{
					"id": 185,
					"name": "BloomFilterOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 186,
							"name": "bloomFilters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 180,
									"name": "BloomFilterColumnOptions"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								186
							]
						}
					]
				},
				{
					"id": 187,
					"name": "Schema",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "columnName"
							},
							{
								"type": "reference",
								"name": "typing"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 205,
					"name": "BroadcastBloomFilterOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 185,
						"name": "BloomFilterOptions"
					},
					"defaultValue": "..."
				},
				{
					"id": 188,
					"name": "BroadcastSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Broadcast: a public post"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 189,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 193,
									"name": "contentHash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 194,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 195,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														195
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 190,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 191,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 192,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														192
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 196,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 197,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 198,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														198
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 202,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 203,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 204,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														204
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 199,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 200,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 201,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														201
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										193,
										190,
										196,
										202,
										199
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 231,
					"name": "GraphChangeSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "GraphChange: a public follow/unfollow\nNote followType will be only 0 or 1; other values are invalid"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 232,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 239,
									"name": "changeType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 240,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 241,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														241
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 233,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 234,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 235,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														235
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 236,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 237,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 238,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														238
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 242,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 243,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 244,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														244
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										239,
										233,
										236,
										242
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 245,
					"name": "ProfileSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Profile - a profile change message"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 246,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 247,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 248,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 249,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														249
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 250,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 251,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 252,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														252
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 256,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 257,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 258,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														258
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 253,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 254,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 255,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														255
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										247,
										250,
										256,
										253
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 276,
					"name": "ReactionBloomFilterOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 277,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 278,
									"name": "bloomFilters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 279,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 280,
														"name": "column",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"emoji\""
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															280
														]
													}
												]
											}
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										278
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 259,
					"name": "ReactionSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Reaction: a visual reply to a Broadcast message (aka post)"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 260,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 261,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 262,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 263,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														263
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 264,
									"name": "emoji",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 265,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 266,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														266
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 267,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 268,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 269,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														269
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 270,
									"name": "inReplyTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 271,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 272,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														272
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 273,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 274,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 275,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														275
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										261,
										264,
										267,
										270,
										273
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 226,
					"name": "ReplyBloomFilterOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 227,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 228,
									"name": "bloomFilters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 229,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 230,
														"name": "column",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"fromId\""
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															230
														]
													}
												]
											}
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										228
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 206,
					"name": "ReplySchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Reply: A public reply post"
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 207,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 211,
									"name": "contentHash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 212,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 213,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														213
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 208,
									"name": "dsnpType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 209,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 210,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"INT32\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														210
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 214,
									"name": "fromId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 217,
									"name": "inReplyTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 218,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 219,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														219
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 223,
									"name": "signature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 224,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 225,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														225
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 220,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 221,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 222,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"BYTE_ARRAY\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														222
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										211,
										208,
										214,
										217,
										223,
										220
									]
								}
							]
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						180,
						185
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						187
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						205,
						188,
						231,
						245,
						276,
						259,
						226,
						206
					]
				}
			]
		},
		{
			"id": 348,
			"name": "core/contracts",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 349,
					"name": "announcement",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 281,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 350,
					"name": "registry",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 351,
						"name": "__module"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						349,
						350
					]
				}
			]
		},
		{
			"id": 281,
			"name": "core/contracts/announcement",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 282,
					"name": "Announcement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 283,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 285,
							"name": "hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 284,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								283,
								285,
								284
							]
						}
					]
				},
				{
					"id": 286,
					"name": "batch",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 287,
							"name": "batch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "batch() allows users call the batch smart contract and post the URI and hash\nof a generated batch to the blockchain.",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 288,
									"name": "announcements",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "array of announcments to batch."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 282,
											"name": "Announcement"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 291,
					"name": "decodeDSNPBatchEvents",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 292,
							"name": "decodeDSNPBatchEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Goes through logs finding all DNSPBatch events",
								"returns": "All announcements recorded as DSNPBatch events\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 282,
											"name": "Announcement"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 289,
					"name": "dsnpBatchFilter",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 290,
							"name": "dsnpBatchFilter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves event filter for DSNPBatch event",
								"returns": "DSNPBatch event filter\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "EventFilter"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						282
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						286,
						291,
						289
					]
				}
			]
		},
		{
			"id": 293,
			"name": "core/contracts/contract",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 297,
					"name": "DSNPMigrationABI",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ethers.utils.ParamType"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 313,
					"name": "findEvent",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 314,
							"name": "findEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find event with given name.",
								"returns": "First event in log that matches name",
								"tags": [
									{
										"tag": "throws",
										"text": "error if no matching events were found"
									},
									{
										"tag": "throws",
										"text": "error if a log is unparsable. This is probably because the event's ABI has not been added to EVENTS_ABI.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 315,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "name of event to find."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 316,
									"name": "logs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "raw logs from a transaction"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "RawLog"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "LogDescription"
							}
						}
					]
				},
				{
					"id": 298,
					"name": "getContractAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 299,
							"name": "getContractAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getContractAddress() allows users call the batch smart contract and post the URI and hash\nof a generated batch to the blockchain.",
								"returns": "HexString A hexidecimal string representing the contract address\n"
							},
							"parameters": [
								{
									"id": 300,
									"name": "provider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "initialized provider"
									},
									"type": {
										"type": "reference",
										"name": "Provider"
									}
								},
								{
									"id": 301,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of contract to find address for"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 302,
					"name": "getVmError",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 303,
							"name": "getVmError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the JSON RPC error from the body, if one exists",
								"returns": "the error if any\n"
							},
							"parameters": [
								{
									"id": 304,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The error expected to have a vm Error\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 305,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 306,
													"name": "body",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 307,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 308,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 309,
																	"name": "body",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		309
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														306,
														307
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 294,
					"name": "keccakTopic",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 295,
							"name": "keccakTopic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 296,
									"name": "topic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 310,
					"name": "parseLogs",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 311,
							"name": "parseLogs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Parse all transaction logs.\nThis requires that all contracts involved in processing the transaction be included in EVENTS_ABI.",
								"returns": "parsed logs excluding any logs that cannot be parsed by the interface.",
								"tags": [
									{
										"tag": "throws",
										"text": "error if a log is unparsable. This is probably because the event's ABI has not been added to EVENTS_ABI.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 312,
									"name": "logs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "raw logs from a transaction"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "RawLog"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "LogDescription"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						297
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						313,
						298,
						302,
						294,
						310
					]
				}
			]
		},
		{
			"id": 317,
			"name": "core/contracts/identity",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 318,
					"name": "Permission",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 320,
							"name": "ANNOUNCE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "1"
						},
						{
							"id": 322,
							"name": "DELEGATE_ADD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "3"
						},
						{
							"id": 323,
							"name": "DELEGATE_REMOVE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "4"
						},
						{
							"id": 319,
							"name": "NONE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "0"
						},
						{
							"id": 321,
							"name": "OWNERSHIP_TRANSFER",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "2"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								320,
								322,
								323,
								319,
								321
							]
						}
					]
				},
				{
					"id": 338,
					"name": "createAndRegisterBeaconProxy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 339,
							"name": "createAndRegisterBeaconProxy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new identity and register it to a handle to get a new DSNP Id.\nThis will create and register a new beacon proxy identity.",
								"returns": "The contract Transaction\n"
							},
							"parameters": [
								{
									"id": 340,
									"name": "userAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "User's public key address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 341,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The string handle to register"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 331,
					"name": "createBeaconProxy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 332,
							"name": "createBeaconProxy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createBeaconProxy(beacon: EthereumAddress) Creates a new identity with the message sender as the owner",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 333,
									"name": "beacon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The beacon address to use logic contract resolution"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 334,
					"name": "createBeaconProxyWithOwner",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 335,
							"name": "createBeaconProxyWithOwner",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createBeaconProxyWithOwner(beacon: EthereumAddress, owner: EthereumAddress) Creates a new identity with the ecrecover address as the owner",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 336,
									"name": "owner",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The initial owner's address of the new contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 337,
									"name": "beacon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The beacon address to use logic contract resolution"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 324,
					"name": "createCloneProxy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 325,
							"name": "createCloneProxy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createCloneProxy(logic?: Ethereum Address ) Creates a new identity with the message sender as the owner",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 326,
									"name": "logic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The address to use for the logic contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 327,
					"name": "createCloneProxyWithOwner",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 328,
							"name": "createCloneProxyWithOwner",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createCloneProxyWithOwner() Creates a new identity with the ecrecover address as the owner",
								"returns": "A contract receipt promise\n"
							},
							"parameters": [
								{
									"id": 329,
									"name": "owner",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The initial owner's address of the new contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 330,
									"name": "logic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The address to use for the logic contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 342,
					"name": "isAuthorizedTo",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 343,
							"name": "isAuthorizedTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks to see if address is authorized with the given permission",
								"returns": "boolean",
								"tags": [
									{
										"tag": "dev",
										"text": "Return MAY change as deauthorization can revoke past messages\n"
									}
								]
							},
							"parameters": [
								{
									"id": 344,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Address that is used to test permission"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 345,
									"name": "contractAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Address of contract to check against"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 346,
									"name": "permission",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Level of permission check. See Permission for details"
									},
									"type": {
										"type": "reference",
										"id": 318,
										"name": "Permission"
									}
								},
								{
									"id": 347,
									"name": "blockNumber",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Check for authorization at a particular block number, 0x0 reserved for endless permissions"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						318
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						338,
						331,
						334,
						324,
						327,
						342
					]
				}
			]
		},
		{
			"id": 351,
			"name": "core/contracts/registry",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 352,
					"name": "Registration",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 353,
							"name": "contractAddr",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 354,
							"name": "dsnpId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 355,
							"name": "handle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								353,
								354,
								355
							]
						}
					]
				},
				{
					"id": 356,
					"name": "Handle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 364,
					"name": "changeAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 365,
							"name": "changeAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "changeAddress() changes the identity contract address of a DSNP Id",
								"returns": "The contract Transaction\n"
							},
							"parameters": [
								{
									"id": 366,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The string handle to alter"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 367,
									"name": "identityContractAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Address of the new identity contract to use"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 368,
					"name": "changeHandle",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 369,
							"name": "changeHandle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "changeHandle() changes the handle of a DSNP Id",
								"returns": "The contract Transaction\n"
							},
							"parameters": [
								{
									"id": 370,
									"name": "oldHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The string handle to alter"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 371,
									"name": "newHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The new handle to use instead"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 372,
					"name": "getDSNPRegistryUpdateEvents",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 373,
							"name": "getDSNPRegistryUpdateEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get all the DSNPRegistryUpdate events",
								"returns": "An array of all the matching events\n"
							},
							"parameters": [
								{
									"id": 374,
									"name": "filter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "By dsnpId or Contract Address"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 352,
														"name": "Registration"
													},
													{
														"type": "literal",
														"value": "handle"
													}
												],
												"name": "Omit"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 352,
											"name": "Registration"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 375,
					"name": "isMessageSignatureAuthorizedTo",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 376,
							"name": "isMessageSignatureAuthorizedTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "validates a serialized message or DSNPMessage against a signature and then checks that the\nsigner has the permissions specified.  DSNPMessages should be passed as is,\nwithout serializing, to guarantee consistent results."
							},
							"parameters": [
								{
									"id": 377,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the signature for the message"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 378,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the signed message"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 398,
												"name": "DSNPMessage"
											}
										]
									}
								},
								{
									"id": 379,
									"name": "dsnpId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the DSNP Id of the supposed signer"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 380,
									"name": "permission",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the permissions to check for"
									},
									"type": {
										"type": "reference",
										"id": 318,
										"name": "Permission"
									}
								},
								{
									"id": 381,
									"name": "blockTag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "(optional). A block number or string BlockTag\n   (see https://docs.ethers.io/v5/api/providers/types/)\n   Defaults to 0x0, which checks for \"forever\" permissions.\n"
									},
									"type": {
										"type": "reference",
										"name": "BlockTag"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 360,
					"name": "register",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 361,
							"name": "register",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "register() registers a handle to get a new DSNP Id",
								"returns": "The contract Transaction\n"
							},
							"parameters": [
								{
									"id": 362,
									"name": "identityContractAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Address of the identity contract to use"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 363,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The string handle to register"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 357,
					"name": "resolveRegistration",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 358,
							"name": "resolveRegistration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "resolveRegistration() Try to resolve a handle into a DSNP Id",
								"returns": "The Hex for the DSNP Id or null if not found\n"
							},
							"parameters": [
								{
									"id": 359,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String handle to resolve"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 352,
												"name": "Registration"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						352
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						356
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						364,
						368,
						372,
						375,
						360,
						357
					]
				}
			]
		},
		{
			"id": 390,
			"name": "core/messages",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 670,
					"name": "BroadcastMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 400
				},
				{
					"id": 669,
					"name": "DSNPMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 398
				},
				{
					"id": 668,
					"name": "DSNPType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 392
				},
				{
					"id": 674,
					"name": "ReactionMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 422
				},
				{
					"id": 672,
					"name": "ReplyMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 410
				},
				{
					"id": 671,
					"name": "createBroadcastMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 405
				},
				{
					"id": 675,
					"name": "createReactionMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 427
				},
				{
					"id": 673,
					"name": "createReplyMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 416
				},
				{
					"id": 678,
					"name": "recoverPublicKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 439
				},
				{
					"id": 676,
					"name": "serialize",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 432
				},
				{
					"id": 677,
					"name": "sign",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 435
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						670,
						669,
						668,
						674,
						672,
						671,
						675,
						673,
						678,
						676,
						677
					]
				}
			]
		},
		{
			"id": 391,
			"name": "core/messages/messages",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 392,
					"name": "DSNPType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "DSNPType: an enum representing different types of DSNP messages"
					},
					"children": [
						{
							"id": 394,
							"name": "Broadcast",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "2"
						},
						{
							"id": 393,
							"name": "GraphChange",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "1"
						},
						{
							"id": 397,
							"name": "Profile",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "5"
						},
						{
							"id": 396,
							"name": "Reaction",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "4"
						},
						{
							"id": 395,
							"name": "Reply",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"defaultValue": "3"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								394,
								393,
								397,
								396,
								395
							]
						}
					]
				},
				{
					"id": 400,
					"name": "BroadcastMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "BroadcastMessage: a DSNP message of type Broadcast"
					},
					"children": [
						{
							"id": 402,
							"name": "contentHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 401,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 394,
								"name": "Broadcast"
							},
							"overwrites": {
								"type": "reference",
								"id": 399,
								"name": "DSNPMessage.dsnpType"
							}
						},
						{
							"id": 403,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 404,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								402,
								401,
								403,
								404
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 398,
							"name": "DSNPMessage"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 154,
							"name": "BatchBroadcastMessage"
						}
					]
				},
				{
					"id": 398,
					"name": "DSNPMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "DSNPMessage: a message intended for inclusion in a batch file"
					},
					"children": [
						{
							"id": 399,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 392,
								"name": "DSNPType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								399
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 173,
							"name": "DSNPBatchMessage"
						},
						{
							"type": "reference",
							"id": 400,
							"name": "BroadcastMessage"
						},
						{
							"type": "reference",
							"id": 410,
							"name": "ReplyMessage"
						},
						{
							"type": "reference",
							"id": 422,
							"name": "ReactionMessage"
						}
					]
				},
				{
					"id": 422,
					"name": "ReactionMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ReactionMessage: a DSNP message of type Reaction"
					},
					"children": [
						{
							"id": 423,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 396,
								"name": "Reaction"
							},
							"overwrites": {
								"type": "reference",
								"id": 399,
								"name": "DSNPMessage.dsnpType"
							}
						},
						{
							"id": 424,
							"name": "emoji",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 425,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 426,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								423,
								424,
								425,
								426
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 398,
							"name": "DSNPMessage"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 167,
							"name": "BatchReactionMessage"
						}
					]
				},
				{
					"id": 410,
					"name": "ReplyMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "ReplyMessage: a DSNP message of type Reply"
					},
					"children": [
						{
							"id": 412,
							"name": "contentHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 411,
							"name": "dsnpType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 395,
								"name": "Reply"
							},
							"overwrites": {
								"type": "reference",
								"id": 399,
								"name": "DSNPMessage.dsnpType"
							}
						},
						{
							"id": 413,
							"name": "fromId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 414,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 415,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								412,
								411,
								413,
								414,
								415
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 398,
							"name": "DSNPMessage"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 160,
							"name": "BatchReplyMessage"
						}
					]
				},
				{
					"id": 405,
					"name": "createBroadcastMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 406,
							"name": "createBroadcastMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createBroadcastMessage() generates a broadcast message from a given URI and\nhash.",
								"returns": "A BroadcastMessage\n"
							},
							"parameters": [
								{
									"id": 407,
									"name": "fromId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user from whom the message is posted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 408,
									"name": "uri",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The URI of the activity pub content to reference"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 409,
									"name": "hash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The hash of the content at the URI"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 400,
								"name": "BroadcastMessage"
							}
						}
					]
				},
				{
					"id": 427,
					"name": "createReactionMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 428,
							"name": "createReactionMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createReactionMessage() generates a reply message from a given URI, hash and\nmessage identifier.",
								"returns": "A ReactionMessage\n"
							},
							"parameters": [
								{
									"id": 429,
									"name": "fromId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user from whom the message is posted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 430,
									"name": "emoji",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The emoji to respond with"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 431,
									"name": "inReplyTo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The message id of the parent message"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 422,
								"name": "ReactionMessage"
							}
						}
					]
				},
				{
					"id": 416,
					"name": "createReplyMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 417,
							"name": "createReplyMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createReplyMessage() generates a reply message from a given URI, hash and\nmessage identifier.",
								"returns": "A ReplyMessage\n"
							},
							"parameters": [
								{
									"id": 418,
									"name": "fromId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The id of the user from whom the message is posted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 419,
									"name": "uri",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The URI of the activity pub content to reference"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 420,
									"name": "hash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The hash of the content at the URI"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 421,
									"name": "inReplyTo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The message id of the parent message"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 410,
								"name": "ReplyMessage"
							}
						}
					]
				},
				{
					"id": 439,
					"name": "recoverPublicKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 440,
							"name": "recoverPublicKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "recoverPublicKey() takes a DSNP message and a message signature and returns\nthe corresponding public key for validation.",
								"returns": "The address of the signer in hex\n"
							},
							"parameters": [
								{
									"id": 441,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP message to sign"
									},
									"type": {
										"type": "reference",
										"id": 398,
										"name": "DSNPMessage"
									}
								},
								{
									"id": 442,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The message signature to validate"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 432,
					"name": "serialize",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 433,
							"name": "serialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 434,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 398,
										"name": "DSNPMessage"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 435,
					"name": "sign",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 436,
							"name": "sign",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "sign() takes a DSNP message and returns a Uint8Array signature for the\nmessage using the Signer provided in the configuration options.",
								"returns": "The message signature in hex\n",
								"tags": [
									{
										"tag": "throws",
										"text": "{@link MissingSigner}\nThis error is thrown if no Signer is defined in the configuration options.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 437,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP message to sign"
									},
									"type": {
										"type": "reference",
										"id": 398,
										"name": "DSNPMessage"
									}
								},
								{
									"id": 438,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						392
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						400,
						398,
						422,
						410
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						405,
						427,
						416,
						439,
						432,
						435
					]
				}
			]
		},
		{
			"id": 443,
			"name": "core/queue",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 679,
					"name": "QueueId",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 463
				},
				{
					"id": 680,
					"name": "QueueInterface",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 464
				},
				{
					"id": 683,
					"name": "dequeueBatch",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 482
				},
				{
					"id": 681,
					"name": "enqueue",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 474
				},
				{
					"id": 682,
					"name": "remove",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 478
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						679,
						680,
						683,
						681,
						682
					]
				}
			]
		},
		{
			"id": 444,
			"name": "core/queue/memoryQueue",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 445,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "MemoryQueue provides a simple, in-memory store for DSNP messages to be\nannounced. This adapter is the default if no other is provided in\nconfiguration."
					},
					"children": [
						{
							"id": 446,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 447,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 445,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 449,
							"name": "nextId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 448,
							"name": "queues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "QueueItem"
										}
									}
								],
								"name": "Record"
							}
						},
						{
							"id": 453,
							"name": "dequeue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 454,
									"name": "dequeue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "dequeue() implements the dequeue function of the QueueInterface. It takes a\nDSNP type, then removes and returns the first DSNP message of the matching\ntype added to the queue. If no messages of the type exist, null will be\nreturned to indicate the end of the queue.",
										"returns": "The dequeued DSNP message or null to indicate end of queue\n"
									},
									"parameters": [
										{
											"id": 455,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The DSNP message type to dequeue"
											},
											"type": {
												"type": "reference",
												"id": 392,
												"name": "DSNPType"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 173,
														"name": "DSNPBatchMessage"
													}
												]
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 469,
										"name": "QueueInterface.dequeue"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 468,
								"name": "QueueInterface.dequeue"
							}
						},
						{
							"id": 450,
							"name": "enqueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 451,
									"name": "enqueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "enqueue() implements the enqueue function of the QueueInterface. It takes a\nDSNP message, adds it to an in-memory store and returns an id which can be\nused to reverse this action, if needed.",
										"returns": "A queue id to be used to remove the message if needed\n"
									},
									"parameters": [
										{
											"id": 452,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The DSNP message to queue up for the next batch"
											},
											"type": {
												"type": "reference",
												"id": 173,
												"name": "DSNPBatchMessage"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 466,
										"name": "QueueInterface.enqueue"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 465,
								"name": "QueueInterface.enqueue"
							}
						},
						{
							"id": 456,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 457,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "remove() implements the remove function of the QueueInterface. It takes an\nid, removes any message in the queue with matching ids and returns the\nremoved message.",
										"returns": "The removed message\n",
										"tags": [
											{
												"tag": "throws",
												"text": "{@link InvalidId}\nThrown if called with an invalid Queue Id.\n"
											},
											{
												"tag": "throws",
												"text": "{@link IdDoesNotExist}\nThrown if called with a Queue Id that does not match any existing message.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 458,
											"name": "queueId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The id of the DSNP message to remove from the queue"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 173,
												"name": "DSNPBatchMessage"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 472,
										"name": "QueueInterface.remove"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 471,
								"name": "QueueInterface.remove"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								446
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								449,
								448
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								453,
								450,
								456
							]
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 464,
							"name": "QueueInterface"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						445
					]
				}
			]
		},
		{
			"id": 462,
			"name": "core/queue/queue",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 464,
					"name": "QueueInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "QueueInterface is the interface a queue adapter is expected to implement to\nbe used with high-level methods in this SDK. The require methods consist of\nan enqueue function, a dequeue function and a remove function."
					},
					"children": [
						{
							"id": 468,
							"name": "dequeue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 469,
									"name": "dequeue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 470,
											"name": "dsnpType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 392,
												"name": "DSNPType"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 173,
														"name": "DSNPBatchMessage"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 465,
							"name": "enqueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 466,
									"name": "enqueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 467,
											"name": "dsnpMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 173,
												"name": "DSNPBatchMessage"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 471,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 472,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 473,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 173,
												"name": "DSNPBatchMessage"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								468,
								465,
								471
							]
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 445,
							"name": "default"
						}
					]
				},
				{
					"id": 463,
					"name": "QueueId",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "QueueId is an representation of an identifier used by a queuing adapter for\nreferencing specific items in the queue which may need to be removed in the\nfuture."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 482,
					"name": "dequeueBatch",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 483,
							"name": "dequeueBatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "dequeueBatch() takes a DSNP type and number of messages to dequeue and\nreturns an array for inclusion in a batch file. If the number provided is\nzero, all messages in the queue with a matching type will be returned.",
								"returns": "An array of DSNP messages removed from the queue\n"
							},
							"parameters": [
								{
									"id": 484,
									"name": "dsnpType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP type of messages to dequeue"
									},
									"type": {
										"type": "reference",
										"id": 392,
										"name": "DSNPType"
									}
								},
								{
									"id": 485,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The number of messages to dequeue and return"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 486,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 173,
											"name": "DSNPBatchMessage"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 474,
					"name": "enqueue",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 475,
							"name": "enqueue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "enqueue() adds a DSNP message to the queue for later publishing to the\nblockchain as a batch file.",
								"returns": "A Queue ID for the queued message\n"
							},
							"parameters": [
								{
									"id": 476,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The DSNP message to queue up for batching"
									},
									"type": {
										"type": "reference",
										"id": 173,
										"name": "DSNPBatchMessage"
									}
								},
								{
									"id": 477,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 478,
					"name": "remove",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 479,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "remove() removes a DSNP message from the queue for later publishing\nto the blockchain.",
								"returns": "The DSNP message removed from the queue\n"
							},
							"parameters": [
								{
									"id": 480,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The Queue ID of the message to remove from the queue"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 481,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional. Configuration overrides, such as from address, if any"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 173,
										"name": "DSNPBatchMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						464
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						463
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						482,
						474,
						478
					]
				}
			]
		},
		{
			"id": 487,
			"name": "core/store",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 685,
					"name": "Content",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 490
				},
				{
					"id": 684,
					"name": "File",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 489
				},
				{
					"id": 689,
					"name": "S3Credentials",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 511
				},
				{
					"id": 690,
					"name": "S3Node",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 516
				},
				{
					"id": 686,
					"name": "StoreInterface",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 491
				},
				{
					"id": 688,
					"name": "get",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 506
				},
				{
					"id": 687,
					"name": "put",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 501
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						685,
						684,
						689,
						690,
						686,
						688,
						687
					]
				}
			]
		},
		{
			"id": 488,
			"name": "core/store/interface",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 491,
					"name": "StoreInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "StoreInterface is the interface a storage adapter is expected to implement to\nbe used with high-level methods in this SDK. The require methods consist of\nan put function, a dequeue function and a get function."
					},
					"children": [
						{
							"id": 497,
							"name": "get",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 498,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 499,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 500,
													"name": "targetPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 489,
														"name": "File"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							}
						},
						{
							"id": 492,
							"name": "put",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 493,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 494,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 495,
													"name": "targetPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 496,
													"name": "content",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 490,
														"name": "Content"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "URL"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								497,
								492
							]
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 516,
							"name": "S3Node"
						}
					]
				},
				{
					"id": 490,
					"name": "Content",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Buffer"
							}
						]
					}
				},
				{
					"id": 489,
					"name": "File",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Buffer"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 506,
					"name": "get",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 507,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "get() fetches a batch file from the given target path.",
								"returns": "The batch file fetched from the given URI\n"
							},
							"parameters": [
								{
									"id": 508,
									"name": "targetPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The path to and name of file."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 509,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 556,
										"name": "Config"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 489,
										"name": "File"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 501,
					"name": "put",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 502,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "put() takes a batch file to store with the chosen hosting solution and\nreturns the URL of the file once stored.",
								"returns": "The URI of the hosted file\n"
							},
							"parameters": [
								{
									"id": 503,
									"name": "targetPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The path to and name of file."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 504,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The file object to store on the chosen hosting solution"
									},
									"type": {
										"type": "reference",
										"id": 490,
										"name": "Content"
									}
								},
								{
									"id": 505,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 556,
										"name": "Config"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "URL"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						491
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						490,
						489
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						506,
						501
					]
				}
			]
		},
		{
			"id": 510,
			"name": "core/store/s3Node",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 516,
					"name": "S3Node",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "S3Node provides a storage solution for saving DSNP messages\nThis adapter is provided for convenience can be used in other applications configuration."
					},
					"children": [
						{
							"id": 517,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 518,
									"name": "new S3Node",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 519,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 511,
												"name": "S3Credentials"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 516,
										"name": "S3Node"
									}
								}
							]
						},
						{
							"id": 521,
							"name": "bucket",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 520,
							"name": "client",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "S3Client"
							}
						},
						{
							"id": 522,
							"name": "region",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 527,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 528,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 529,
											"name": "targetPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StoreInterface.get"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 497,
								"name": "StoreInterface.get"
							}
						},
						{
							"id": 523,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 524,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 525,
											"name": "targetPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 526,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "URL"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StoreInterface.put"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 492,
								"name": "StoreInterface.put"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								517
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								521,
								520,
								522
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								527,
								523
							]
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 491,
							"name": "StoreInterface"
						}
					]
				},
				{
					"id": 511,
					"name": "S3Credentials",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "S3Credentials extends S3ClientConfig\nIt allows for easy to level configuration."
					},
					"children": [
						{
							"id": 514,
							"name": "bucket",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 512,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 515,
							"name": "region",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "S3ClientConfig.region"
							}
						},
						{
							"id": 513,
							"name": "secret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								514,
								512,
								515,
								513
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "S3ClientConfig"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						516
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						511
					]
				}
			]
		},
		{
			"id": 551,
			"name": "core/utilities",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 694,
					"name": "MissingContract",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 540
				},
				{
					"id": 693,
					"name": "MissingProvider",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 539
				},
				{
					"id": 692,
					"name": "MissingSigner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 538
				},
				{
					"id": 695,
					"name": "MissingStoreError",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 541
				},
				{
					"id": 691,
					"name": "NotImplementedError",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 537
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						694,
						693,
						692,
						695,
						691
					]
				}
			]
		},
		{
			"id": 536,
			"name": "core/utilities/errors",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 540,
					"name": "MissingContract",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 539,
					"name": "MissingProvider",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 538,
					"name": "MissingSigner",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 541,
					"name": "MissingStoreError",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				},
				{
					"id": 537,
					"name": "NotImplementedError",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "Error"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						540,
						539,
						538,
						541,
						537
					]
				}
			]
		},
		{
			"id": 542,
			"name": "core/utilities/guards",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 543,
					"name": "notNull",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 544,
							"name": "notNull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 545,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 546,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "x",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "T"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						543
					]
				}
			]
		},
		{
			"id": 547,
			"name": "core/utilities/hash",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 548,
					"name": "hashPrefix",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 549,
							"name": "hashPrefix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 550,
									"name": "hash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						548
					]
				}
			]
		},
		{
			"id": 552,
			"name": "core/utilities/json",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 553,
					"name": "sortObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 554,
							"name": "sortObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "sortObject() takes a javascript object and returns a copy of the object with\nall keys sorted recursively. This method is intended to be used to guarantee\nthat objects intended be JSON stringified always produce a consistent JSON\nstring, since implementations of [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#issue_with_plain_json.stringify_for_use_as_javascript)\ndo not necessarily guarantee key order.",
								"returns": "A sorted copy of the given object\n"
							},
							"parameters": [
								{
									"id": 555,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The object to recursively sort"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						553
					]
				}
			]
		},
		{
			"id": 1,
			"name": "index",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 631,
					"name": "BaseFilters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "property",
								"text": "{string[]} types          The type of events to fetch, i.e. \"notes\", \"follows\" etc."
							},
							{
								"tag": "property",
								"text": "{Handle[]} includeHandles List of user handles to fetch events from. If not present, all users not listed in excludeHandles will be included."
							},
							{
								"tag": "property",
								"text": "{Handle[]} excludeHandles List of user handles to exclude from results, such as a blocklist."
							},
							{
								"tag": "property",
								"text": "{HexString[]} inReplyTo  List of hashes to seek replies to. For use in fetching comments and reactions.\n"
							}
						]
					},
					"children": [
						{
							"id": 634,
							"name": "excludeHandles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 635,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 633,
							"name": "includeHandles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 632,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								634,
								635,
								633,
								632
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 636,
							"name": "FetchFilters"
						}
					]
				},
				{
					"id": 556,
					"name": "Config",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "The Config Interface provides for various settings and plugable modules."
					},
					"children": [
						{
							"id": 561,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Contracts are different addresses for specific contracts or for running custom tests"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 562,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 563,
											"name": "announcer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Address of the Batch Announce contract"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 564,
											"name": "beacon",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Address of the Beacon contract"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 565,
											"name": "beaconFactory",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Address of the Beacon Proxy Factory contract"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 567,
											"name": "identityCloneFactory",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Address of the Identity Clone Proxy Factory contract"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 566,
											"name": "identityLogic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Address of the Identity Logic contract"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 568,
											"name": "registry",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Address of the Registry contract"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												563,
												564,
												565,
												567,
												566,
												568
											]
										}
									]
								}
							}
						},
						{
							"id": 557,
							"name": "provider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An [Ethers.js Provider](https://docs.ethers.io/v5/api/provider/)"
							},
							"type": {
								"type": "reference",
								"name": "Provider"
							}
						},
						{
							"id": 559,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue manages Announcements waiting to be batched"
							},
							"type": {
								"type": "reference",
								"id": 464,
								"name": "QueueInterface"
							}
						},
						{
							"id": 558,
							"name": "signer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An [Ethers.js Signer](https://docs.ethers.io/v5/api/signer/)"
							},
							"type": {
								"type": "reference",
								"name": "Signer"
							}
						},
						{
							"id": 560,
							"name": "store",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Storage handles storing batch, content, and other media files at a publicly accessible location"
							},
							"type": {
								"type": "reference",
								"id": 491,
								"name": "StoreInterface"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								561,
								557,
								559,
								558,
								560
							]
						}
					]
				},
				{
					"id": 636,
					"name": "FetchFilters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "property",
								"text": "{string} limit            The maximum number of results to fetch."
							},
							{
								"tag": "property",
								"text": "{BlockNumber} to          The last block to scan for events. Defaults to current block."
							},
							{
								"tag": "property",
								"text": "{BlockNumber} from        The first block to scan for events. Defaults to genesis.\n"
							}
						]
					},
					"children": [
						{
							"id": 642,
							"name": "excludeHandles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 634,
								"name": "BaseFilters.excludeHandles"
							}
						},
						{
							"id": 639,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 643,
							"name": "inReplyTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 635,
								"name": "BaseFilters.inReplyTo"
							}
						},
						{
							"id": 641,
							"name": "includeHandles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 633,
								"name": "BaseFilters.includeHandles"
							}
						},
						{
							"id": 637,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 638,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 640,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 632,
								"name": "BaseFilters.types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								642,
								639,
								643,
								641,
								637,
								638,
								640
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 631,
							"name": "BaseFilters"
						}
					]
				},
				{
					"id": 569,
					"name": "ConfigOpts",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "ConfigOpts represents override options to be passed when fetching the config"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 556,
								"name": "Config"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 8,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 69,
									"name": "availabilityFilter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 70,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 71,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "availabilityFilter() takes a list of handles returning a filtered list of just the ones that are available",
														"returns": "The filtered list of handles that are currently available\n"
													},
													"parameters": [
														{
															"id": 72,
															"name": "handles",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "A list of handles to check for availability"
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 77,
									"name": "broadcast",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 78,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 79,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "broadcast() creates a broadcast DSNP event and enqueues it for the next\nbatch. This method is not yet implemented.",
														"returns": "The Batch Broadcast Message\n"
													},
													"parameters": [
														{
															"id": 80,
															"name": "_content",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 106,
																		"name": "ActivityPub"
																	}
																],
																"name": "Partial"
															}
														},
														{
															"id": 81,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 154,
																"name": "BatchBroadcastMessage"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 10,
									"name": "core",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 382,
										"name": "__module"
									}
								},
								{
									"id": 50,
									"name": "createRegistration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 51,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 52,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "createRegistration() creates a new identity for a public key and registers a handle to it.\nThis function will wait for the identity to land on chain before resolving.",
														"returns": "id of identity created\n"
													},
													"parameters": [
														{
															"id": 53,
															"name": "addr",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "public key address that will be used to control identity delegate"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 54,
															"name": "handle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "name of identity (must be globaly unique)"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 20,
									"name": "fetchEvents",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 21,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 22,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "fetchEvents() fetches the most recent activity pub events matching the given\nsearch criteria. This method is not yet implemented.",
														"returns": "An array of events\n"
													},
													"parameters": [
														{
															"id": 23,
															"name": "_filters",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 636,
																"name": "FetchFilters"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 392,
																	"name": "DSNPType"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 24,
									"name": "follow",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 25,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 26,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "follow() creates a follow event and enqueues it for the next batch. This\nmethod is not yet implemented."
													},
													"parameters": [
														{
															"id": 27,
															"name": "_handle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 28,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 93,
									"name": "getConfig",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 94,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 95,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "getConfig() fetches the current configuration settings and returns them.",
														"returns": "The current configuration settings\n"
													},
													"parameters": [
														{
															"id": 96,
															"name": "overrides",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 556,
														"name": "Config"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 45,
									"name": "getFollowees",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 46,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 47,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "getFollowees() scans the current state of the network and returns an array of\nall user handles being followed by the given follower handle. This method is\nnot yet implemented.",
														"returns": "An array of all users followed by the follower user\n"
													},
													"parameters": [
														{
															"id": 48,
															"name": "_follower",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 49,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 40,
									"name": "getFollowers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 42,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "getFollowers() scans the current state of the network and returns an array of\nall user handles following the given followee handle. This method is not yet\nimplemented.",
														"returns": "An array of all users following the followee\n"
													},
													"parameters": [
														{
															"id": 43,
															"name": "_followee",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 44,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 73,
									"name": "isAvailable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 74,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 75,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "isAvailable() checks to see if the given handle is available",
														"returns": "boolean If the handle is available\n"
													},
													"parameters": [
														{
															"id": 76,
															"name": "handle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The handle to test for availability"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 34,
									"name": "isFollowing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 36,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "isFollowing() scans the current state of the network and returns a boolean\nrepresenting whether or not a given user is following another given user.\nThis method is not yet implemented.",
														"returns": "A boolean representing whether or not the follower is following the followee\n"
													},
													"parameters": [
														{
															"id": 37,
															"name": "_follower",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 38,
															"name": "_followee",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 39,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 87,
									"name": "react",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 88,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 89,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "react() creates a reaction activity pub event and enqueues it for the next\nbatch. This method is not yet implemented.",
														"returns": "The Batch Broadcast Message\n"
													},
													"parameters": [
														{
															"id": 90,
															"name": "_emoji",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 91,
															"name": "_inReplyTo",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 92,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 167,
																"name": "BatchReactionMessage"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 82,
									"name": "reply",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 83,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 84,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "reply() creates a reply activity pub event and enqueues it for the next\nbatch. This method is not yet implemented.",
														"returns": "The Batch Broadcast Message\n"
													},
													"parameters": [
														{
															"id": 85,
															"name": "_content",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 106,
																		"name": "ActivityPub"
																	}
																],
																"name": "Partial"
															}
														},
														{
															"id": 86,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 160,
																"name": "BatchReplyMessage"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 61,
									"name": "resolveHandle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 62,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 63,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the current registration from a handle",
														"returns": "The Registration object with Handle, DSNP Id, and Identity contract address\n"
													},
													"parameters": [
														{
															"id": 64,
															"name": "handle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The Registry Handle"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 352,
																		"name": "Registration"
																	}
																]
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 65,
									"name": "resolveId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 66,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 67,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the current registration from a DSNP Id",
														"returns": "The Registration object with Handle, DSNP Id, and Identity contract address\n"
													},
													"parameters": [
														{
															"id": 68,
															"name": "id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The Hex or decimal DSNP Id"
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 352,
																		"name": "Registration"
																	}
																]
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 97,
									"name": "setConfig",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 98,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 99,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "setConfig() sets the current configuration with the given object.",
														"returns": "The newly constructed config\n",
														"tags": [
															{
																"tag": "params",
																"text": "newConfig The configuration settings to set with"
															}
														]
													},
													"parameters": [
														{
															"id": 100,
															"name": "newConfig",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 556,
														"name": "Config"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 11,
									"name": "subscribe",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 12,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 13,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "subscribe() takes a callback to invoke upon receiving new activity pub events\nmatching the given criteria. This method only works if the web3 provider set\nin the configuration is a websocket provider. This method is not yet\nimplemented.",
														"returns": "A subscription id to unsubscribe later if needed\n"
													},
													"parameters": [
														{
															"id": 14,
															"name": "_filters",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 631,
																"name": "BaseFilters"
															}
														},
														{
															"id": 15,
															"name": "_callback",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "SubscriptionCallbackFn"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 29,
									"name": "unfollow",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 31,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "unfollow() creates an unfollow event and enqueues it for the next batch.\nThis method is not yet implemented."
													},
													"parameters": [
														{
															"id": 32,
															"name": "_handle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 33,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 16,
									"name": "unsubscribe",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 18,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "unsubscribe() removes a subscription callback created with the subscribe\nmethod. This method only works if the web3 provider set in the configuration\nis a websocket provider. This method is not yet implemented."
													},
													"parameters": [
														{
															"id": 19,
															"name": "_id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 55,
									"name": "updateRegistration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 57,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "updateRegistration() updates registry data for a handle. This method\nwill only work if the given handle has already been authenticated. This\nmethod is not yet implemented.",
														"returns": "The pending transaction\n"
													},
													"parameters": [
														{
															"id": 58,
															"name": "_id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 59,
															"name": "_registration",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 352,
																"name": "Registration"
															}
														},
														{
															"id": 60,
															"name": "_opts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 556,
																		"name": "Config"
																	}
																],
																"name": "Partial"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "ContractTransaction"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										69,
										77,
										10,
										50,
										20,
										24,
										93,
										45,
										40,
										73,
										34,
										87,
										82,
										61,
										65,
										97,
										11,
										29,
										16,
										55
									]
								}
							]
						}
					}
				},
				{
					"id": 3,
					"name": "config",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 4,
					"name": "content",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 2,
					"name": "core",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"id": 382,
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 5,
					"name": "handles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 6,
					"name": "network",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 7,
					"name": "search",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"name": "__module"
					},
					"defaultValue": "..."
				},
				{
					"id": 604,
					"name": "availabilityFilter",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 605,
							"name": "availabilityFilter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "availabilityFilter() takes a list of handles returning a filtered list of just the ones that are available",
								"returns": "The filtered list of handles that are currently available\n"
							},
							"parameters": [
								{
									"id": 606,
									"name": "handles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A list of handles to check for availability"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 576,
					"name": "broadcast",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 577,
							"name": "broadcast",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "broadcast() creates a broadcast DSNP event and enqueues it for the next\nbatch. This method is not yet implemented.",
								"returns": "The Batch Broadcast Message\n"
							},
							"parameters": [
								{
									"id": 578,
									"name": "_content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 106,
												"name": "ActivityPub"
											}
										],
										"name": "Partial"
									}
								},
								{
									"id": 579,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 154,
										"name": "BatchBroadcastMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 589,
					"name": "createRegistration",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 590,
							"name": "createRegistration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "createRegistration() creates a new identity for a public key and registers a handle to it.\nThis function will wait for the identity to land on chain before resolving.",
								"returns": "id of identity created\n"
							},
							"parameters": [
								{
									"id": 591,
									"name": "addr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "public key address that will be used to control identity delegate"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 592,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "name of identity (must be globaly unique)"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 651,
					"name": "fetchEvents",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 652,
							"name": "fetchEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "fetchEvents() fetches the most recent activity pub events matching the given\nsearch criteria. This method is not yet implemented.",
								"returns": "An array of events\n"
							},
							"parameters": [
								{
									"id": 653,
									"name": "_filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 636,
										"name": "FetchFilters"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 392,
											"name": "DSNPType"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 610,
					"name": "follow",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 611,
							"name": "follow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "follow() creates a follow event and enqueues it for the next batch. This\nmethod is not yet implemented."
							},
							"parameters": [
								{
									"id": 612,
									"name": "_handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 613,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 570,
					"name": "getConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 571,
							"name": "getConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getConfig() fetches the current configuration settings and returns them.",
								"returns": "The current configuration settings\n"
							},
							"parameters": [
								{
									"id": 572,
									"name": "overrides",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 556,
								"name": "Config"
							}
						}
					]
				},
				{
					"id": 627,
					"name": "getFollowees",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 628,
							"name": "getFollowees",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getFollowees() scans the current state of the network and returns an array of\nall user handles being followed by the given follower handle. This method is\nnot yet implemented.",
								"returns": "An array of all users followed by the follower user\n"
							},
							"parameters": [
								{
									"id": 629,
									"name": "_follower",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 630,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 623,
					"name": "getFollowers",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 624,
							"name": "getFollowers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getFollowers() scans the current state of the network and returns an array of\nall user handles following the given followee handle. This method is not yet\nimplemented.",
								"returns": "An array of all users following the followee\n"
							},
							"parameters": [
								{
									"id": 625,
									"name": "_followee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 626,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 607,
					"name": "isAvailable",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 608,
							"name": "isAvailable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "isAvailable() checks to see if the given handle is available",
								"returns": "boolean If the handle is available\n"
							},
							"parameters": [
								{
									"id": 609,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The handle to test for availability"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 618,
					"name": "isFollowing",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 619,
							"name": "isFollowing",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "isFollowing() scans the current state of the network and returns a boolean\nrepresenting whether or not a given user is following another given user.\nThis method is not yet implemented.",
								"returns": "A boolean representing whether or not the follower is following the followee\n"
							},
							"parameters": [
								{
									"id": 620,
									"name": "_follower",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 621,
									"name": "_followee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 622,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 584,
					"name": "react",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 585,
							"name": "react",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "react() creates a reaction activity pub event and enqueues it for the next\nbatch. This method is not yet implemented.",
								"returns": "The Batch Broadcast Message\n"
							},
							"parameters": [
								{
									"id": 586,
									"name": "_emoji",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 587,
									"name": "_inReplyTo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 588,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 167,
										"name": "BatchReactionMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 580,
					"name": "reply",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 581,
							"name": "reply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "reply() creates a reply activity pub event and enqueues it for the next\nbatch. This method is not yet implemented.",
								"returns": "The Batch Broadcast Message\n"
							},
							"parameters": [
								{
									"id": 582,
									"name": "_content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 106,
												"name": "ActivityPub"
											}
										],
										"name": "Partial"
									}
								},
								{
									"id": 583,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 160,
										"name": "BatchReplyMessage"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 598,
					"name": "resolveHandle",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 599,
							"name": "resolveHandle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the current registration from a handle",
								"returns": "The Registration object with Handle, DSNP Id, and Identity contract address\n"
							},
							"parameters": [
								{
									"id": 600,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The Registry Handle"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 352,
												"name": "Registration"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 601,
					"name": "resolveId",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 602,
							"name": "resolveId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the current registration from a DSNP Id",
								"returns": "The Registration object with Handle, DSNP Id, and Identity contract address\n"
							},
							"parameters": [
								{
									"id": 603,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The Hex or decimal DSNP Id"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 352,
												"name": "Registration"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 573,
					"name": "setConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 574,
							"name": "setConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "setConfig() sets the current configuration with the given object.",
								"returns": "The newly constructed config\n",
								"tags": [
									{
										"tag": "params",
										"text": "newConfig The configuration settings to set with"
									}
								]
							},
							"parameters": [
								{
									"id": 575,
									"name": "newConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 556,
								"name": "Config"
							}
						}
					]
				},
				{
					"id": 644,
					"name": "subscribe",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 645,
							"name": "subscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "subscribe() takes a callback to invoke upon receiving new activity pub events\nmatching the given criteria. This method only works if the web3 provider set\nin the configuration is a websocket provider. This method is not yet\nimplemented.",
								"returns": "A subscription id to unsubscribe later if needed\n"
							},
							"parameters": [
								{
									"id": 646,
									"name": "_filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 631,
										"name": "BaseFilters"
									}
								},
								{
									"id": 647,
									"name": "_callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SubscriptionCallbackFn"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 614,
					"name": "unfollow",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 615,
							"name": "unfollow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "unfollow() creates an unfollow event and enqueues it for the next batch.\nThis method is not yet implemented."
							},
							"parameters": [
								{
									"id": 616,
									"name": "_handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 617,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 648,
					"name": "unsubscribe",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 649,
							"name": "unsubscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "unsubscribe() removes a subscription callback created with the subscribe\nmethod. This method only works if the web3 provider set in the configuration\nis a websocket provider. This method is not yet implemented."
							},
							"parameters": [
								{
									"id": 650,
									"name": "_id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 593,
					"name": "updateRegistration",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 594,
							"name": "updateRegistration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "updateRegistration() updates registry data for a handle. This method\nwill only work if the given handle has already been authenticated. This\nmethod is not yet implemented.",
								"returns": "The pending transaction\n"
							},
							"parameters": [
								{
									"id": 595,
									"name": "_id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 596,
									"name": "_registration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 352,
										"name": "Registration"
									}
								},
								{
									"id": 597,
									"name": "_opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "Config"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ContractTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						631,
						556,
						636
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						569
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						8
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3,
						4,
						2,
						5,
						6,
						7
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						604,
						576,
						589,
						651,
						610,
						570,
						627,
						623,
						607,
						618,
						584,
						580,
						598,
						601,
						573,
						644,
						614,
						648,
						593
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				382,
				132,
				101,
				176,
				133,
				153,
				179,
				348,
				281,
				293,
				317,
				351,
				390,
				391,
				443,
				444,
				462,
				487,
				488,
				510,
				551,
				536,
				542,
				547,
				552,
				1
			]
		}
	]
}